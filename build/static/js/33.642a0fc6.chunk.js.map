{"version":3,"sources":["components/Page.js","components/authentication/verify-code/VerifyCodeForm.js","utils/fakeRequest.js","views/authentication/VerifyCode.js"],"names":["Page","forwardRef","children","title","other","ref","propTypes","PropTypes","node","isRequired","string","maxLength","object","target","value","length","slice","VerifyCodeForm","history","useHistory","enqueueSnackbar","useSnackbar","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","formik","useFormik","initialValues","validationSchema","onSubmit","async","time","Promise","res","setTimeout","variant","push","PATH_DASHBOARD","root","values","errors","isValid","touched","isSubmitting","handleSubmit","getFieldProps","autoComplete","noValidate","Box","sx","display","justifyContent","Object","keys","map","item","mx","OutlinedInput","type","placeholder","onInput","error","Boolean","inputProps","padding","textAlign","width","xs","sm","height","FormHelperText","style","mt","LoadingButton","fullWidth","size","pending","RootStyle","styled","theme","minHeight","alignItems","spacing","HeaderStyle","top","left","position","breakpoints","up","VerifyCode","to","Logo","Container","maxWidth","Button","component","RouterLink","PATH_AUTH","login","startIcon","icon","arrowIosBackFill","mb","Typography","gutterBottom","color","align","Link","underline","onClick"],"mappings":"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","file":"static/js/33.642a0fc6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// material\nimport { Box } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useHistory } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { Box, OutlinedInput, FormHelperText } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// utils\nimport fakeRequest from '../../../utils/fakeRequest';\n\n// ----------------------------------------------------------------------\n\n// eslint-disable-next-line consistent-return\nfunction maxLength(object) {\n  if (object.target.value.length > object.target.maxLength) {\n    return (object.target.value = object.target.value.slice(\n      0,\n      object.target.maxLength\n    ));\n  }\n}\n\nexport default function VerifyCodeForm() {\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const VerifyCodeSchema = Yup.object().shape({\n    code1: Yup.number().required('Code is required'),\n    code2: Yup.number().required('Code is required'),\n    code3: Yup.number().required('Code is required'),\n    code4: Yup.number().required('Code is required'),\n    code5: Yup.number().required('Code is required'),\n    code6: Yup.number().required('Code is required')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      code1: '',\n      code2: '',\n      code3: '',\n      code4: '',\n      code5: '',\n      code6: ''\n    },\n    validationSchema: VerifyCodeSchema,\n    onSubmit: async () => {\n      await fakeRequest(500);\n      enqueueSnackbar('Verify success', { variant: 'success' });\n      history.push(PATH_DASHBOARD.root);\n    }\n  });\n\n  const {\n    values,\n    errors,\n    isValid,\n    touched,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          {Object.keys(values).map((item) => (\n            <Box key={item} sx={{ mx: 1 }}>\n              <OutlinedInput\n                {...getFieldProps(item)}\n                type=\"number\"\n                placeholder=\"-\"\n                onInput={maxLength}\n                error={Boolean(touched[item] && errors[item])}\n                inputProps={{\n                  maxLength: 1,\n                  sx: {\n                    padding: 0,\n                    textAlign: 'center',\n                    width: { xs: 36, sm: 56 },\n                    height: { xs: 36, sm: 56 }\n                  }\n                }}\n              />\n            </Box>\n          ))}\n        </Box>\n\n        <FormHelperText error={!isValid} style={{ textAlign: 'right' }}>\n          {!isValid && 'Code is required'}\n        </FormHelperText>\n\n        <Box sx={{ mt: 3 }}>\n          <LoadingButton\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n            pending={isSubmitting}\n          >\n            Verify\n          </LoadingButton>\n        </Box>\n      </Form>\n    </FormikProvider>\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport default function fakeRequest(time) {\n  return new Promise((res) => setTimeout(res, time));\n}\n","import { Icon } from '@iconify/react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Box, Button, Link, Container, Typography } from '@material-ui/core';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport Logo from '../../components/Logo';\nimport { VerifyCodeForm } from '../../components/authentication/verify-code';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  display: 'flex',\n  minHeight: '100%',\n  alignItems: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\nconst HeaderStyle = styled('header')(({ theme }) => ({\n  top: 0,\n  left: 0,\n  width: '100%',\n  position: 'absolute',\n  padding: theme.spacing(3),\n  [theme.breakpoints.up('sm')]: {\n    padding: theme.spacing(5)\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function VerifyCode() {\n  return (\n    <RootStyle title=\"Thimble | Verify\">\n      <HeaderStyle>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n      </HeaderStyle>\n\n      <Container>\n        <Box sx={{ maxWidth: 480, mx: 'auto' }}>\n          <Button\n            size=\"small\"\n            component={RouterLink}\n            to={PATH_AUTH.login}\n            startIcon={<Icon icon={arrowIosBackFill} width={20} height={20} />}\n            sx={{ mb: 3 }}\n          >\n            Back\n          </Button>\n\n          <Typography variant=\"h3\" gutterBottom>\n            Please check your email!\n          </Typography>\n          <Typography sx={{ color: 'text.secondary' }}>\n            We have emailed a 6-digit confirmation code to acb@domain, please\n            enter the code in below box to verify your email.\n          </Typography>\n\n          <Box sx={{ mt: 5, mb: 3 }}>\n            <VerifyCodeForm />\n          </Box>\n\n          <Typography variant=\"body2\" align=\"center\">\n            Don’t have a code? &nbsp;\n            <Link variant=\"subtitle2\" underline=\"none\" onClick={() => {}}>\n              Resend code\n            </Link>\n          </Typography>\n        </Box>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}