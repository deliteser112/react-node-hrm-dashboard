{"version":3,"sources":["components/Page.js","components/SearchNotFound.js","components/dashboard-companies/CompanyListHead.js","components/dashboard-companies/CompanyListToolbar.js","components/dashboard-companies/CompanyList.js","components/dashboard-companies/CompanyContent.js","views/DashboardCompaniesPage.js"],"names":["Page","forwardRef","children","title","other","ref","propTypes","PropTypes","node","isRequired","string","SearchNotFound","searchQuery","gutterBottom","align","variant","UserListHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","map","headCell","alignRight","sortDirection","id","TableSortLabel","hideSortIcon","active","direction","onClick","property","event","label","Box","sx","visuallyHidden","RootStyle","styled","Toolbar","theme","height","display","justifyContent","spacing","SearchStyle","OutlinedInput","width","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","palette","grey","UserListToolbar","filterName","onFilterName","isLight","useTheme","mode","color","bgcolor","Typography","component","value","placeholder","startAdornment","InputAdornment","position","Icon","icon","searchFill","Tooltip","IconButton","trash2Fill","roundFilterList","TABLE_HEAD","descendingComparator","a","b","UserList","dispatch","useDispatch","userList","useSelector","state","user","companies","superAdmin","page","setPage","useState","setOrder","selected","setSelected","setOrderBy","setFilterName","rowsPerPage","setRowsPerPage","useEffect","getUserList","getCompanyList","console","log","emptyRows","Math","max","length","filteredUsers","arrays","comparator","query","array","stabilizedThis","el","index","sort","filter","_user","domain","toLowerCase","indexOf","applySortFilter","getComparator","isUserNotFound","Card","target","Scrollbar","TableContainer","minWidth","Table","newSelecteds","n","TableBody","slice","row","name","members","offices","teams","adminAvatar","adminName","adminEmail","adminPass","isItemSelected","hover","tabIndex","role","aria-checked","selectedIndex","newSelected","concat","handleClick","scope","Stack","alignItems","Avatar","alt","src","noWrap","style","colSpan","py","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","DirectoryContent","Container","maxWidth","breakpoints","down","px","DirectoryPage"],"mappings":"+IAAA,oDAQA,MAAMA,EAAOC,sBAAW,EAAGC,WAAUC,QAAQ,MAAOC,GAASC,IAC3D,eAAC,IAAD,CAAKA,IAAKA,KAASD,EAAnB,UACE,cAAC,IAAD,UACE,gCAAQD,MAETD,OAILF,EAAKM,UAAY,CACfJ,SAAUK,IAAUC,KAAKC,WACzBN,MAAOI,IAAUG,QAGJV,O,iCCrBf,+DASe,SAASW,GAAe,YAAEC,EAAc,MAAOR,IAC5D,OACE,eAAC,IAAD,IAAWA,EAAX,UACE,cAAC,IAAD,CAAYS,cAAY,EAACC,MAAM,SAASC,QAAQ,YAAhD,uBAGA,eAAC,IAAD,CAAYA,QAAQ,QAAQD,MAAM,SAAlC,sCAEE,uCAAeF,EAAf,OAFF,4D,wTCQS,SAASI,GAAa,MACnCC,EADmC,QAEnCC,EAFmC,SAGnCC,EAHmC,UAInCC,EAJmC,YAKnCC,EALmC,cAMnCC,EANmC,iBAOnCC,IAMA,OACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,EAAA,EAAD,CACEC,cAAeR,EAAc,GAAKA,EAAcF,EAChDW,QAASX,EAAW,GAAKE,IAAgBF,EACzCY,SAAUR,MAGbH,EAAUY,KAAKC,IACd,qBAACP,EAAA,EAAD,CAEEZ,MAAOmB,EAASC,WAAa,QAAU,OACvCC,cAAejB,IAAYe,EAASG,IAAKnB,EAH3C,SAKE,eAACoB,EAAA,EAAD,CACEC,cAAY,EACZC,OAAQrB,IAAYe,EAASG,GAC7BI,UAAWtB,IAAYe,EAASG,GAAKnB,EAAQ,MAC7CwB,SAxBeC,EAwBYT,EAASG,GAxBPO,IACvCrB,EAAcqB,EAAOD,KAmBb,UAMGT,EAASW,MACT1B,IAAYe,EAASG,GACpB,cAACS,EAAA,EAAD,CAAKC,GAAI,IAAKC,KAAd,SACa,SAAV9B,EAAmB,oBAAsB,qBAE1C,SAfDgB,EAASG,IAhBGM,c,sHCX7B,MAAMM,EAAYC,YAAOC,IAAPD,EAAgB,EAAGE,YAAH,CAChCC,OAAQ,GACRC,QAAS,OACTC,eAAgB,gBAChB3B,QAASwB,EAAMI,QAAQ,EAAG,EAAG,EAAG,OAG5BC,EAAcP,YAAOQ,IAAPR,EAAsB,EAAGE,YAAH,CACxCO,MAAO,IACPC,WAAYR,EAAMS,YAAYC,OAAO,CAAC,aAAc,SAAU,CAC5DC,OAAQX,EAAMS,YAAYE,OAAOC,UACjCC,SAAUb,EAAMS,YAAYI,SAASC,UAEvC,gBAAiB,CAAEP,MAAO,IAAKQ,UAAWf,EAAMgB,cAAcC,IAC9D,aAAc,CACZC,YAAY,iBACZC,YAAY,GAAD,OAAKnB,EAAMoB,QAAQC,KAAK,OAAxB,oBAYA,SAASC,GAAgB,YACtCpD,EADsC,WAEtCqD,EAFsC,aAGtCC,IAEA,MACMC,EAAiC,UADzBC,cACQN,QAAQO,KAE9B,OACE,eAAC9B,EAAD,CACEF,GAAI,IACEzB,EAAc,GAAK,CACrB0D,MAAOH,EAAU,eAAiB,eAClCI,QAASJ,EAAU,kBAAoB,iBAJ7C,UAQGvD,EAAc,EACb,eAAC4D,EAAA,EAAD,CAAYC,UAAU,MAAMnE,QAAQ,YAApC,UACGM,EADH,eAIA,cAACmC,EAAD,CACE2B,MAAOT,EACP3C,SAAU4C,EACVS,YAAY,sBACZC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAAC1C,EAAA,EAAD,CACEqC,UAAWM,OACXC,KAAMC,IACN5C,GAAI,CAAEiC,MAAO,uBAOtB1D,EAAc,EACb,cAACsE,EAAA,EAAD,CAASxF,MAAM,SAAf,SACE,cAACyF,EAAA,EAAD,UACE,cAAC,OAAD,CAAMH,KAAMI,UAIhB,cAACF,EAAA,EAAD,CAASxF,MAAM,cAAf,SACE,cAACyF,EAAA,EAAD,UACE,cAAC,OAAD,CAAMH,KAAMK,aChExB,MAAMC,EAAa,CACjB,CAAE3D,GAAI,cAAeQ,MAAO,eAAgBV,YAAY,GACxD,CAAEE,GAAI,gBAAiBQ,MAAO,SAAUV,YAAY,GACpD,CAAEE,GAAI,UAAWQ,MAAO,UAAWV,YAAY,GAC/C,CAAEE,GAAI,UAAWQ,MAAO,UAAWV,YAAY,GAC/C,CAAEE,GAAI,QAASQ,MAAO,QAASV,YAAY,GAC3C,CAAEE,GAAI,YAAaQ,MAAO,aAAcV,YAAY,GACpD,CAAEE,GAAI,aAAcQ,MAAO,QAASV,YAAY,GAChD,CAAEE,GAAI,YAAaQ,MAAO,WAAYV,YAAY,IAKpD,SAAS8D,EAAqBC,EAAGC,EAAGhF,GAClC,OAAIgF,EAAEhF,GAAW+E,EAAE/E,IACT,EAENgF,EAAEhF,GAAW+E,EAAE/E,GACV,EAEF,EA0BM,SAASiF,IAEtB,MAAMC,EAAWC,eACX,SAAEC,GAAaC,aAAaC,GAAUA,EAAMC,QAC5C,UAAEC,GAAcH,aAAaC,GAAUA,EAAMG,cAE5CC,EAAMC,GAAWC,mBAAS,IAC1B7F,EAAO8F,GAAYD,mBAAS,QAC5BE,EAAUC,GAAeH,mBAAS,KAClC5F,EAASgG,GAAcJ,mBAAS,WAChCpC,EAAYyC,GAAiBL,mBAAS,KACtCM,EAAaC,GAAkBP,mBAAS,IAE/CQ,qBAAU,KACRlB,EAASmB,eACTnB,EAASoB,iBACR,CAACpB,IAEJkB,qBAAU,KACRG,QAAQC,IAAIhB,KACX,CAACA,IAEJ,MAkDMiB,EACJf,EAAO,EAAIgB,KAAKC,IAAI,GAAI,EAAIjB,GAAQQ,EAAcV,EAAUoB,QAAU,EAElEC,EA5FR,SAAyBC,EAAQC,EAAYC,GAC3C,MAAMC,EAAQH,GAAU,GAClBI,EAAiBD,EAAMnG,KAAI,CAACqG,EAAIC,IAAU,CAACD,EAAIC,KAMrD,OALAF,EAAeG,MAAK,CAACtC,EAAGC,KACtB,MAAMjF,EAAQgH,EAAWhC,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVjF,EAAoBA,EACjBgF,EAAE,GAAKC,EAAE,MAEdgC,EACKM,iBACLL,GACCM,IAAuE,IAA7DA,EAAMC,OAAOC,cAAcC,QAAQV,EAAMS,iBAGjDP,EAAepG,KAAKqG,GAAOA,EAAG,KA8EfQ,CACpBnC,EAnGJ,SAAuBzF,EAAOC,GAC5B,MAAiB,SAAVD,EACH,CAACgF,EAAGC,IAAMF,EAAqBC,EAAGC,EAAGhF,GACrC,CAAC+E,EAAGC,KAAOF,EAAqBC,EAAGC,EAAGhF,GAiGxC4H,CAAc7H,EAAOC,GACrBwD,GAGIqE,EAA0C,IAAzBhB,EAAcD,OAErC,OACE,eAACkB,EAAA,EAAD,WACE,cAACvE,EAAD,CACEpD,YAAa2F,EAASc,OACtBpD,WAAYA,EACZC,aAxBsBhC,IAC1BwE,EAAcxE,EAAMsG,OAAO9D,UA0BzB,cAAC+D,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAgBrG,GAAI,CAAEsG,SAAU,KAAhC,SACE,eAACC,EAAA,EAAD,WACE,cAACrI,EAAD,CACEC,MAAOA,EACPC,QAASA,EACTE,UAAW2E,EACX5E,SAAUuF,EAAUoB,OACpBzG,YAAa2F,EAASc,OACtBxG,cA9Ec,CAACqB,EAAOD,KAEhCqE,EADc7F,IAAYwB,GAAsB,QAAVzB,EACrB,OAAS,OAC1BiG,EAAWxE,IA4EDnB,iBAzEkBoB,IAC5B,GAAIA,EAAMsG,OAAOnH,QAAjB,CACE,MAAMwH,EAAe5C,EAAU1E,KAAKuH,GAAMA,EAAEb,SAC5CzB,EAAYqC,QAGdrC,EAAY,OAqEJ,eAACuC,EAAA,EAAD,WACGzB,EACE0B,MAAM7C,EAAOQ,EAAaR,EAAOQ,EAAcA,GAC/CpF,KAAK0H,IACJ,MAAM,GACJtH,EADI,KAEJuH,EAFI,OAGJjB,EAHI,QAIJkB,EAJI,QAKJC,EALI,MAMJC,EANI,YAOJC,EAPI,UAQJC,EARI,WASJC,EATI,UAUJC,GACER,EAEES,GAA+C,IAA9BnD,EAAS4B,QAAQF,GAExC,OACE,eAACjH,EAAA,EAAD,CACE2I,OAAK,EAELC,UAAW,EACXC,KAAK,WACLtD,SAAUmD,EACVI,eAAcJ,EANhB,UAQE,cAACzI,EAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,EAAA,EAAD,CACEE,QAASqI,EACTpI,SAAWY,GAjGf,EAACA,EAAOgH,KAC1B,MAAMa,EAAgBxD,EAAS4B,QAAQe,GACvC,IAAIc,EAAc,IACK,IAAnBD,EACFC,EAAcA,EAAYC,OAAO1D,EAAU2C,GAChB,IAAlBa,EACTC,EAAcA,EAAYC,OAAO1D,EAASyC,MAAM,IACvCe,IAAkBxD,EAASc,OAAS,EAC7C2C,EAAcA,EAAYC,OAAO1D,EAASyC,MAAM,GAAI,IAC3Ce,EAAgB,IACzBC,EAAcA,EAAYC,OACxB1D,EAASyC,MAAM,EAAGe,GAClBxD,EAASyC,MAAMe,EAAgB,KAGnCvD,EAAYwD,IAkF+BE,CAAYhI,EAAO+F,OAG5C,cAAChH,EAAA,EAAD,CAAWZ,MAAM,OAAjB,SAAyB6I,IACzB,cAACjI,EAAA,EAAD,CAAWZ,MAAM,OAAjB,SAAyB4H,IACzB,cAAChH,EAAA,EAAD,CAAWZ,MAAM,OAAjB,SAAyB8I,IACzB,cAAClI,EAAA,EAAD,CAAWZ,MAAM,OAAjB,SAAyB+I,IACzB,cAACnI,EAAA,EAAD,CAAWZ,MAAM,OAAjB,SAAyBgJ,IAEzB,cAACpI,EAAA,EAAD,CAAWwD,UAAU,KAAK0F,MAAM,MAAMjJ,QAAQ,OAA9C,SACE,eAACkJ,EAAA,EAAD,CAAOrI,UAAU,MAAMsI,WAAW,SAASvH,QAAS,EAApD,UACE,cAACwH,EAAA,EAAD,CAAQC,IAAKhB,EAAWiB,IAAKlB,IAC7B,cAAC9E,EAAA,EAAD,CAAYlE,QAAQ,YAAYmK,QAAM,EAAtC,SACGlB,SAIP,cAACtI,EAAA,EAAD,CAAWZ,MAAM,OAAjB,SAAyBmJ,IACzB,cAACvI,EAAA,EAAD,CAAWZ,MAAM,OAAjB,SAAyBoJ,MA3BpB9H,EAAK,MA+BjBuF,EAAY,GACX,cAAClG,EAAA,EAAD,CAAU0J,MAAO,CAAE/H,OAAQ,GAAKuE,GAAhC,SACE,cAACjG,EAAA,EAAD,CAAW0J,QAAS,SAIzBrC,GACC,cAACS,EAAA,EAAD,UACE,cAAC/H,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAWZ,MAAM,SAASsK,QAAS,EAAGtI,GAAI,CAAEuI,GAAI,GAAhD,SACE,cAAC1K,EAAA,EAAD,CAAgBC,YAAa8D,iBAS3C,cAAC4G,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,IAC7BrG,UAAU,MACVsG,MAAOlF,EAASwB,OAChBV,YAAaA,EACbR,KAAMA,EACN6E,aA9HmB,CAAC9I,EAAO+I,KAC/B7E,EAAQ6E,IA8HJC,oBA3H2BhJ,IAC/B0E,EAAeuE,SAASjJ,EAAMsG,OAAO9D,MAAO,KAC5C0B,EAAQ,SCnIG,SAASgF,IACtB,MAAM1I,EAAQ0B,cACd,OACE,cAACiH,EAAA,EAAD,CAAWC,SAAS,KAAKjJ,GAAI,CAAE,CAACK,EAAM6I,YAAYC,KAAK,OAAQ,CAAEC,GAAI,IAArE,SACE,cAAC,EAAD,MCNS,SAASC,IACtB,OACE,cAACnM,EAAA,EAAD,CAAMG,MAAM,yBAAZ,SACE,cAAC,EAAD","file":"static/js/30.683766a9.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// material\nimport { Box } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import PropTypes from 'prop-types';\n// material\nimport { Paper, Typography } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nSearchNotFound.propTypes = {\n  searchQuery: PropTypes.string\n};\n\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\n  return (\n    <Paper {...other}>\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\n        Not found\n      </Typography>\n      <Typography variant=\"body2\" align=\"center\">\n        No results found for &nbsp;\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or\n        using complete words.\n      </Typography>\n    </Paper>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@material-ui/utils';\nimport {\n  Box,\n  Checkbox,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableSortLabel\n} from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nUserListHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func\n};\n\nexport default function UserListHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n          />\n        </TableCell>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.alignRight ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              hideSortIcon\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box sx={{ ...visuallyHidden }}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport {\n  useTheme,\n  experimentalStyled as styled\n} from '@material-ui/core/styles';\nimport {\n  Box,\n  Toolbar,\n  Tooltip,\n  IconButton,\n  Typography,\n  OutlinedInput,\n  InputAdornment\n} from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nUserListToolbar.propTypes = {\n  numSelected: PropTypes.number,\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func\n};\n\nexport default function UserListToolbar({\n  numSelected,\n  filterName,\n  onFilterName\n}) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: isLight ? 'primary.main' : 'text.primary',\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark'\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography component=\"div\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <SearchStyle\n          value={filterName}\n          onChange={onFilterName}\n          placeholder=\"Search companies...\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Box\n                component={Icon}\n                icon={searchFill}\n                sx={{ color: 'text.disabled' }}\n              />\n            </InputAdornment>\n          }\n        />\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <Icon icon={trash2Fill} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <Icon icon={roundFilterList} />\n          </IconButton>\n        </Tooltip>\n      )}\n    </RootStyle>\n  );\n}\n","import { filter } from 'lodash';\n// import { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\n// material\n// import { useTheme } from '@material-ui/core/styles';\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@material-ui/core';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getUserList } from '../../redux/slices/user';\nimport { getCompanyList } from '../../redux/slices/superAdmin';\n// import useAuth from '../../hooks/useAuth';\n// components\n// import Label from '../Label';\nimport Scrollbar from '../Scrollbar';\nimport SearchNotFound from '../SearchNotFound';\n\nimport UserListHead from './CompanyListHead';\nimport UserListToolbar from './CompanyListToolbar';\n// import UserMoreMenu from './CompanyMoreMenu';\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'companyName', label: 'Company Name', alignRight: false },\n  { id: 'companyDomain', label: 'Domain', alignRight: false },\n  { id: 'members', label: 'Members', alignRight: false },\n  { id: 'offices', label: 'Offices', alignRight: false },\n  { id: 'teams', label: 'Teams', alignRight: false },\n  { id: 'adminName', label: 'Admin Name', alignRight: false },\n  { id: 'adminEmail', label: 'Email', alignRight: false },\n  { id: 'adminPass', label: 'Password', alignRight: false }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(arrays, comparator, query) {\n  const array = arrays || [];\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(\n      array,\n      (_user) => _user.domain.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function UserList() {\n  // const theme = useTheme();\n  const dispatch = useDispatch();\n  const { userList } = useSelector((state) => state.user);\n  const { companies } = useSelector((state) => state.superAdmin);\n  // const { user } = useAuth();\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('domain');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  useEffect(() => {\n    dispatch(getUserList());\n    dispatch(getCompanyList());\n  }, [dispatch]);\n\n  useEffect(() => {\n    console.log(companies);\n  }, [companies]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = companies.map((n) => n.domain);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  // const handleDeleteUser = (userId) => {\n  //   dispatch(deleteUser(userId));\n  // };\n\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - companies.length) : 0;\n\n  const filteredUsers = applySortFilter(\n    companies,\n    getComparator(order, orderBy),\n    filterName\n  );\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  return (\n    <Card>\n      <UserListToolbar\n        numSelected={selected.length}\n        filterName={filterName}\n        onFilterName={handleFilterByName}\n      />\n\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 800 }}>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={companies.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  const {\n                    id,\n                    name,\n                    domain,\n                    members,\n                    offices,\n                    teams,\n                    adminAvatar,\n                    adminName,\n                    adminEmail,\n                    adminPass\n                  } = row;\n\n                  const isItemSelected = selected.indexOf(domain) !== -1;\n\n                  return (\n                    <TableRow\n                      hover\n                      key={id + 1}\n                      tabIndex={-1}\n                      role=\"checkbox\"\n                      selected={isItemSelected}\n                      aria-checked={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          onChange={(event) => handleClick(event, domain)}\n                        />\n                      </TableCell>\n                      <TableCell align=\"left\">{name}</TableCell>\n                      <TableCell align=\"left\">{domain}</TableCell>\n                      <TableCell align=\"left\">{members}</TableCell>\n                      <TableCell align=\"left\">{offices}</TableCell>\n                      <TableCell align=\"left\">{teams}</TableCell>\n\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                          <Avatar alt={adminName} src={adminAvatar} />\n                          <Typography variant=\"subtitle2\" noWrap>\n                            {adminName}\n                          </Typography>\n                        </Stack>\n                      </TableCell>\n                      <TableCell align=\"left\">{adminEmail}</TableCell>\n                      <TableCell align=\"left\">{adminPass}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      <TablePagination\n        rowsPerPageOptions={[10, 15, 25]}\n        component=\"div\"\n        count={userList.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Card>\n  );\n}\n","/* eslint-disable array-callback-return */\r\nimport React from 'react';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Container } from '@material-ui/core';\r\n\r\nimport CompanyList from './CompanyList';\r\n\r\nexport default function DirectoryContent() {\r\n  const theme = useTheme();\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ [theme.breakpoints.down('md')]: { px: 0 } }}>\r\n      <CompanyList />\r\n    </Container>\r\n  );\r\n}\r\n","// components\nimport Page from '../components/Page';\n\nimport { CompanyContent } from '../components/dashboard-companies';\n\n// ----------------------------------------------------------------------\n\nexport default function DirectoryPage() {\n  return (\n    <Page title=\"Thimble | Company List\">\n      <CompanyContent />\n    </Page>\n  );\n}\n"],"sourceRoot":""}