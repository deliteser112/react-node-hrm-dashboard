{"version":3,"sources":["../node_modules/@material-ui/icons/Add.js","../node_modules/@material-ui/core/Accordion/AccordionContext.js","../node_modules/@material-ui/icons/ExpandMore.js","../node_modules/@material-ui/core/CardContent/cardContentClasses.js","../node_modules/@material-ui/core/CardContent/CardContent.js","../node_modules/@material-ui/core/ToggleButtonGroup/isValueSelected.js","../node_modules/@material-ui/core/ToggleButtonGroup/toggleButtonGroupClasses.js","../node_modules/@material-ui/core/ToggleButtonGroup/ToggleButtonGroup.js","../node_modules/@material-ui/core/DialogActions/dialogActionsClasses.js","../node_modules/@material-ui/core/DialogActions/DialogActions.js","../node_modules/@material-ui/core/ToggleButton/toggleButtonClasses.js","../node_modules/@material-ui/core/ToggleButton/ToggleButton.js","../node_modules/@material-ui/icons/Close.js","../node_modules/@material-ui/core/DialogContent/dialogContentClasses.js","../node_modules/@material-ui/core/DialogContent/DialogContent.js","../node_modules/@material-ui/core/Accordion/accordionClasses.js","../node_modules/@material-ui/core/Accordion/Accordion.js","../node_modules/@material-ui/core/AccordionSummary/accordionSummaryClasses.js","../node_modules/@material-ui/core/AccordionSummary/AccordionSummary.js","../node_modules/@material-ui/core/AccordionDetails/accordionDetailsClasses.js","../node_modules/@material-ui/core/AccordionDetails/AccordionDetails.js","../node_modules/@material-ui/lab/ToggleButton/ToggleButton.js","../node_modules/@material-ui/core/AvatarGroup/avatarGroupClasses.js","../node_modules/@material-ui/core/AvatarGroup/AvatarGroup.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","AccordionContext","React","getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","cardContentClasses","CardContentRoot","experimentalStyled","name","overridesResolver","props","styles","root","padding","paddingBottom","CardContent","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","styleProps","_extends","classes","composeClasses","useUtilityClasses","_jsx","as","clsx","isValueSelected","candidate","undefined","Array","isArray","indexOf","getToggleButtonGroupUtilityClass","toggleButtonGroupClasses","ToggleButtonGroupRoot","deepmerge","orientation","vertical","fullWidth","grouped","capitalize","theme","display","borderRadius","shape","flexDirection","width","marginLeft","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","marginTop","borderTop","ToggleButtonGroup","children","color","exclusive","onChange","size","slots","handleChange","event","buttonValue","index","newValue","slice","splice","concat","handleExclusiveChange","role","map","child","selected","getDialogActionsUtilityClass","dialogActionsClasses","DialogActionsRoot","disableSpacing","spacing","alignItems","justifyContent","flex","DialogActions","getToggleButtonUtilityClass","toggleButtonClasses","ToggleButtonRoot","ButtonBase","label","typography","button","border","palette","divider","action","active","disabled","disabledBackground","textDecoration","backgroundColor","alpha","text","primary","hoverOpacity","selectedOpacity","main","fontSize","pxToRem","ToggleButtonLabel","ToggleButton","disableFocusRipple","onClick","focusRipple","defaultPrevented","getDialogContentUtilityClass","dialogContentClasses","DialogContentRoot","dividers","WebkitOverflowScrolling","overflowY","paddingTop","borderBottom","DialogContent","getAccordionUtilityClass","accordionClasses","AccordionRoot","Paper","square","rounded","disableGutters","gutters","region","transition","duration","transitions","shortest","position","create","overflowAnchor","left","top","right","height","content","opacity","expanded","marginBottom","margin","Accordion","childrenProp","defaultExpanded","expandedProp","TransitionComponent","Collapse","TransitionProps","setExpandedState","useControlled","controlled","state","summary","toArray","contextValue","toggle","_jsxs","Provider","in","timeout","id","getAccordionSummaryUtilityClass","accordionSummaryClasses","AccordionSummaryRoot","expandIconWrapper","minHeight","focusVisible","focus","disabledOpacity","cursor","AccordionSummaryContent","flexGrow","AccordionSummaryExpandIconWrapper","transform","AccordionSummary","expandIcon","focusVisibleClassName","disableRipple","getAccordionDetailsUtilityClass","accordionDetailsClasses","AccordionDetailsRoot","AccordionDetails","warnedOnce","console","warn","join","getAvatarGroupUtilityClass","avatarGroupClasses","SPACINGS","small","medium","AvatarGroupRoot","avatar","background","boxSizing","AvatarGroupAvatar","Avatar","AvatarGroup","max","variant","clampedMax","filter","extraAvatars","length","style","reverse"],"mappings":"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","file":"static/js/8.54c662ce.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, disableGutters: boolean, toggle: () => void}>}\n */\n\nconst AccordionContext = /*#__PURE__*/React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => styles.root || {};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver\n})(() => {\n  /* Styles applied to the root element. */\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\"]);\n\n  const styleProps = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'vertical', 'grouped', 'groupedHorizontal', 'groupedVertical']);\nexport default toggleButtonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport isValueSelected from './isValueSelected';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.orientation === 'vertical' && styles.vertical, styleProps.fullWidth && styles.fullWidth, {\n    [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, styles.grouped, styles[`grouped${capitalize(styleProps.orientation)}`])\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    orientation,\n    fullWidth\n  } = styleProps;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`]\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\n\nconst ToggleButtonGroupRoot = experimentalStyled('div', {}, {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps,\n  theme\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'inline-flex',\n  borderRadius: theme.shape.borderRadius\n}, styleProps.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, styleProps.fullWidth && {\n  width: '100%'\n}, {\n  /* Styles applied to the children. */\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, styleProps.orientation === 'horizontal' ? {\n    '&:not(:first-of-type)': {\n      marginLeft: -1,\n      borderLeft: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.Mui-selected + .${toggleButtonGroupClasses.grouped}.Mui-selected`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    '&:not(:first-of-type)': {\n      marginTop: -1,\n      borderTop: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.Mui-selected + .${toggleButtonGroupClasses.grouped}.Mui-selected`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    exclusive = false,\n    fullWidth = false,\n    onChange,\n    orientation = 'horizontal',\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"color\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"]);\n\n  const styleProps = _extends({}, props, {\n    fullWidth,\n    orientation,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const handleChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  const handleExclusiveChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n        size: child.props.size || size,\n        fullWidth,\n        color: child.props.color || color\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of a button when it is selected.\n   * @default 'standard'\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, !styleProps.disableSpacing && styles.spacing), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableSpacing\n  } = styleProps;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\n\nconst DialogActionsRoot = experimentalStyled('div', {}, {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !styleProps.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n\n  const {\n    className,\n    disableSpacing = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"disableSpacing\"]);\n\n  const styleProps = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogActions;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'label', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[`size${capitalize(styleProps.size)}`], {\n    [`& .${toggleButtonClasses.label}`]: styles.label\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = styleProps;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color],\n    label: ['label']\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\n\nconst ToggleButtonRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({}, theme.typography.button, {\n  borderRadius: theme.shape.borderRadius,\n  padding: 11,\n  border: `1px solid ${theme.palette.divider}`,\n  color: theme.palette.action.active\n}, styleProps.fullWidth && {\n  width: '100%'\n}, {\n  '&.Mui-disabled': {\n    color: theme.palette.action.disabled,\n    border: `1px solid ${theme.palette.action.disabledBackground}`\n  },\n  '&:hover': {\n    textDecoration: 'none',\n    // Reset on mouse devices\n    backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, styleProps.color === 'standard' && {\n  '&.Mui-selected': {\n    color: theme.palette.text.primary,\n    backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.selectedOpacity)\n      }\n    }\n  }\n}, styleProps.color !== 'standard' && {\n  '&.Mui-selected': {\n    color: theme.palette[styleProps.color].main,\n    backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.selectedOpacity)\n      }\n    }\n  }\n}, styleProps.size === 'small' && {\n  padding: 7,\n  fontSize: theme.typography.pxToRem(13)\n}, styleProps.size === 'large' && {\n  padding: 15,\n  fontSize: theme.typography.pxToRem(15)\n}));\nconst ToggleButtonLabel = experimentalStyled('span', {}, {\n  name: 'MuiToggleButton',\n  slot: 'Label'\n})({\n  /* Styles applied to the label wrapper element. */\n  width: '100%',\n  // Ensure the correct width for iOS Safari\n  display: 'inherit',\n  alignItems: 'inherit',\n  justifyContent: 'inherit'\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    disableFocusRipple = false,\n    fullWidth = false,\n    onChange,\n    onClick,\n    selected,\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    color: color,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    styleProps: styleProps,\n    \"aria-pressed\": selected\n  }, other, {\n    children: /*#__PURE__*/_jsx(ToggleButtonLabel, {\n      className: classes.label,\n      styleProps: styleProps,\n      children: children\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is in an active state.\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusedVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default ToggleButton;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.dividers && styles.dividers), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    dividers\n  } = styleProps;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = experimentalStyled('div', {}, {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  flex: '1 1 auto',\n  WebkitOverflowScrolling: 'touch',\n  // Add iOS momentum scrolling.\n  overflowY: 'auto',\n  padding: '8px 24px',\n  '&:first-of-type': {\n    // dialog without title\n    paddingTop: 20\n  }\n}, styleProps.dividers && {\n  padding: '16px 24px',\n  borderTop: `1px solid ${theme.palette.divider}`,\n  borderBottom: `1px solid ${theme.palette.divider}`\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"dividers\"]);\n\n  const styleProps = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContent;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getAccordionUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordion', slot);\n}\nconst accordionClasses = generateUtilityClasses('MuiAccordion', ['root', 'rounded', 'expanded', 'disabled', 'gutters', 'region']);\nexport default accordionClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nimport accordionClasses, { getAccordionUtilityClass } from './accordionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, !styleProps.square && styles.rounded, !styleProps.disableGutters && styles.gutters, {\n    [`& .${accordionClasses.region}`]: styles.region\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = styleProps;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\n\nconst AccordionRoot = experimentalStyled(Paper, {}, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&:before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: theme.palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&:before': {\n        display: 'none'\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    [`&.${accordionClasses.expanded}`]: {\n      '&:before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&:before': {\n          display: 'none'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: theme.palette.action.disabledBackground\n    }\n  };\n}, ({\n  theme,\n  styleProps\n}) => _extends({}, !styleProps.square && {\n  borderRadius: 0,\n  '&:first-of-type': {\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius\n  },\n  '&:last-of-type': {\n    borderBottomLeftRadius: theme.shape.borderRadius,\n    borderBottomRightRadius: theme.shape.borderRadius,\n    // Fix a rendering issue on Edge\n    '@supports (-ms-ime-align: auto)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    }\n  }\n}, !styleProps.disableGutters && {\n  [`&.${accordionClasses.expanded}`]: {\n    margin: '16px 0'\n  }\n}));\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    disableGutters = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"defaultExpanded\", \"disabled\", \"disableGutters\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n\n  const styleProps = _extends({}, props, {\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(AccordionRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    styleProps: styleProps,\n    square: square\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionContext.Provider, {\n      value: contextValue,\n      children: summary\n    }), /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      in: expanded,\n      timeout: \"auto\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        \"aria-labelledby\": summary.props.id,\n        id: summary.props['aria-controls'],\n        role: \"region\",\n        className: classes.region,\n        children: children\n      })\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport AccordionContext from '../Accordion/AccordionContext';\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from './accordionSummaryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${accordionSummaryClasses.content}`]: styles.content,\n    [`& .${accordionSummaryClasses.expandIconWrapper}`]: styles.expandIconWrapper\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = styleProps;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\n\nconst AccordionSummaryRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return _extends({\n    /* Styles applied to the root element. */\n    display: 'flex',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n\n    /* Styles applied to the ButtonBase root element if the button is keyboard focused. */\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: theme.palette.action.focus\n    },\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    }\n  }, !styleProps.disableGutters && {\n    [`&.${accordionSummaryClasses.expanded}`]: {\n      minHeight: 64\n    }\n  });\n});\nconst AccordionSummaryContent = experimentalStyled('div', {}, {\n  name: 'MuiAccordionSummary',\n  slot: 'Content'\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the children wrapper element. */\n  display: 'flex',\n  flexGrow: 1,\n  margin: '12px 0'\n}, !styleProps.disableGutters && {\n  transition: theme.transitions.create(['margin'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    margin: '20px 0'\n  }\n}));\nconst AccordionSummaryExpandIconWrapper = experimentalStyled('div', {}, {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the `expandIcon`'s wrapper element. */\n  display: 'flex',\n  color: theme.palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n\n  /* Styles applied to the `expandIcon`'s wrapper element if `expanded={true}`. */\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n}));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"onClick\"]);\n\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const styleProps = _extends({}, props, {\n    expanded,\n    disabled,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      styleProps: styleProps,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      styleProps: styleProps,\n      children: expandIcon\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default AccordionSummary;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getAccordionDetailsUtilityClass } from './accordionDetailsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  return styles.root || {};\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\n\nconst AccordionDetailsRoot = experimentalStyled('div', {}, {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => ({\n  /* Styles applied to the root element. */\n  padding: theme.spacing(1, 2, 2)\n}));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n\n  const styleProps = _extends({}, props);\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    styleProps: styleProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default AccordionDetails;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport ToggleButton from '@material-ui/core/ToggleButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nlet warnedOnce = false;\n/**\n * @ignore - do not document.\n */\n\nexport default /*#__PURE__*/React.forwardRef(function DeprecatedToggleButton(props, ref) {\n  if (!warnedOnce) {\n    console.warn(['Material-UI: The ToggleButton component was moved from the lab to the core.', '', \"You should use `import { ToggleButton } from '@material-ui/core'`\", \"or `import ToggleButton from '@material-ui/core/ToggleButton'`\"].join('\\n'));\n    warnedOnce = true;\n  }\n\n  return /*#__PURE__*/_jsx(ToggleButton, _extends({\n    ref: ref\n  }, props));\n});","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getAvatarGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatarGroup', slot);\n}\nconst avatarGroupClasses = generateUtilityClasses('MuiAvatarGroup', ['root', 'avatar']);\nexport default avatarGroupClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\n\nconst AvatarGroupRoot = experimentalStyled('div', {}, {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => ({\n  [`& .MuiAvatar-root`]: {\n    border: `2px solid ${theme.palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  },\n\n  /* Styles applied to the root element. */\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}));\nconst AvatarGroupAvatar = experimentalStyled(Avatar, {}, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar'\n})(({\n  theme\n}) => ({\n  border: `2px solid ${theme.palette.background.default}`,\n  boxSizing: 'content-box',\n  marginLeft: -8,\n  '&:last-child': {\n    marginLeft: 0\n  }\n}));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    max = 5,\n    spacing = 'medium',\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"max\", \"spacing\", \"variant\"]);\n\n  const clampedMax = max < 2 ? 2 : max;\n\n  const styleProps = _extends({}, props, {\n    max,\n    spacing,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const extraAvatars = children.length > clampedMax ? children.length - clampedMax + 1 : 0;\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsxs(AvatarGroupAvatar, {\n      styleProps: styleProps,\n      className: classes.avatar,\n      style: {\n        marginLeft\n      },\n      variant: variant,\n      children: [\"+\", extraAvatars]\n    }) : null, children.slice(0, children.length - extraAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['Material-UI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;"],"sourceRoot":""}