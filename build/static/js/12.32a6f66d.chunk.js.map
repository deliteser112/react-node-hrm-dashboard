{"version":3,"sources":["components/Page.js","hooks/useAdmin.js","components/HeaderDashboard.js","components/dashboard-plans/PlanStatus.js","components/dashboard-plans/PricingPlanCard.js","components/dashboard-plans/PlanContent.js","views/DashboardPlanPage.js"],"names":["Page","forwardRef","children","title","other","ref","propTypes","PropTypes","node","isRequired","string","useUserManage","dispatch","useDispatch","updateProfile","prefferedname","jobtitle","departmentname","email","firstname","lastname","photoURL","roles","officeId","teamId","updateOrganizations","updatedOrg","updateOfficeList","updatedOfficeList","updateTeamList","updatedTeamList","deleteOffice","deleteTeam","addOffice","addStatus","addTeam","addMemberList","memberList","makeAdmin","userId","deleteUserList","deleteUser","createCheckoutSession","payData","updatePaidStatus","HeaderDashboard","links","action","heading","moreLink","sx","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","YellowBadge","styled","theme","backgroundColor","borderRadius","padding","spacing","fontWeight","fontSize","GreyBadge","RedBadge","color","PlanStatus","planProps","useTheme","sessionId","useParams","user","useAuth","useAdmin","userList","useSelector","state","planType","setPlanType","useState","planPrice","setPlanPrice","activeUsers","setActiveUsers","isSubmitting","setIsSubmitting","expiredDate","setExpiredDate","remainedDays","setRemainedDays","plan","setPlan","useEffect","undefined","customerId","isPaid","expiredDay","toUpperCase","getUserList","length","Card","CardContent","breakpoints","down","Box","width","justifyContent","borderBottom","textAlign","Typography","mr","py","m","Grid","container","item","xs","md","borderRight","borderLeft","FormControl","component","RadioGroup","row","aria-label","name","defaultValue","value","onChange","event","FormControlLabel","control","Radio","label","LoadingButton","type","pending","disabled","onClick","async","trialEnd","quantity","url","window","location","startIcon","endIcon","minWidth","RootStyle","maxWidth","margin","position","flexDirection","up","ManropeRegular","PoppinsRegular","PricingPlanCard","card","index","subscription","icon","price","caption","lists","labelAction","backColor","boxShadow","alt","src","height","my","fontFamily","marginLeft","alignSelf","textTransform","marginBottom","typography","isAvailable","Icon","checkmarkFill","text","Button","size","RouterLink","to","PATH_DASHBOARD","root","marginTop","PlanContent","plans","setPlans","PLANS","Container","tmpPlans","lg","DashboardPlanPage","general","home"],"mappings":"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","file":"static/js/12.32a6f66d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// material\nimport { Box } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { useDispatch } from 'react-redux';\n// redux\nimport {\n  addOffice,\n  deleteOffice,\n  updateOfficeList,\n  // team\n  addTeam,\n  deleteTeam,\n  updateTeamList,\n  // Organization\n  updateOrganizations,\n  addStatus,\n  // Directory\n  addMemberList,\n  makeAdmin,\n  deleteUser,\n  // Payment\n  createCheckoutSession,\n  updatePaidStatus\n} from '../redux/slices/adminSetting';\nimport { updateProfile } from '../redux/slices/user';\n\n// ----------------------------------------------------------------------\n\nexport default function useUserManage() {\n  // JWT Auth\n  const dispatch = useDispatch();\n\n  return {\n    updateProfile: ({\n      prefferedname,\n      jobtitle,\n      departmentname,\n      email,\n      firstname,\n      lastname,\n      photoURL,\n      roles,\n      officeId,\n      teamId\n    }) =>\n      dispatch(\n        updateProfile({\n          prefferedname,\n          jobtitle,\n          departmentname,\n          email,\n          firstname,\n          lastname,\n          photoURL,\n          roles,\n          officeId,\n          teamId\n        })\n      ),\n\n    // -------------- Update list ---------------------\n    updateOrganizations: ({ updatedOrg }) =>\n      dispatch(updateOrganizations({ updatedOrg })),\n\n    // -------------- Update list ---------------------\n    updateOfficeList: ({ updatedOfficeList }) =>\n      dispatch(updateOfficeList({ updatedOfficeList })),\n\n    updateTeamList: ({ updatedTeamList }) =>\n      dispatch(updateTeamList({ updatedTeamList })),\n    // -------------- Deleting the data---------------------\n\n    deleteOffice: ({ officeId }) => dispatch(deleteOffice({ officeId })),\n    deleteTeam: ({ teamId }) => dispatch(deleteTeam({ teamId })),\n\n    // -------------- Adding the data ---------------------\n\n    addOffice: () => dispatch(addOffice()),\n    addStatus: () => dispatch(addStatus()), // in Organization\n    addTeam: () => dispatch(addTeam()),\n\n    addMemberList: (memberList) => dispatch(addMemberList(memberList)), // in Directory by admin\n    makeAdmin: (userId) => dispatch(makeAdmin(userId)), // in Directory by admin\n    deleteUserList: (userId) => dispatch(deleteUser(userId)), // in Directory by admin\n\n    createCheckoutSession: (payData) =>\n      dispatch(createCheckoutSession(payData)), // in Directory by admin\n    updatePaidStatus: (payData) => dispatch(updatePaidStatus(payData)) // in Directory by admin\n  };\n}\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderDashboard.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderDashboard({\n  links,\n  action,\n  heading,\n  moreLink = '' || [],\n  sx,\n  ...other\n}) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\n\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  FormControl,\r\n  Grid,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio\r\n} from '@material-ui/core';\r\n\r\nimport { LoadingButton } from '@material-ui/lab';\r\n// import CheckoutDialog from './CheckoutDialog';\r\n\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useAdmin from '../../hooks/useAdmin';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\n\r\nimport { getUserList } from '../../redux/slices/user';\r\n\r\nconst YellowBadge = styled('div')(({ theme }) => ({\r\n  backgroundColor: '#FAF6D0',\r\n  borderRadius: '20px',\r\n  padding: theme.spacing(0.5, 2),\r\n  fontWeight: 800,\r\n  fontSize: 13\r\n}));\r\n\r\nconst GreyBadge = styled('div')(({ theme }) => ({\r\n  backgroundColor: '#DCE7FB',\r\n  borderRadius: '20px',\r\n  padding: theme.spacing(0.5, 2),\r\n  fontWeight: 800,\r\n  fontSize: 13\r\n}));\r\n\r\nconst RedBadge = styled('div')(({ theme }) => ({\r\n  backgroundColor: '#FF5050',\r\n  borderRadius: '20px',\r\n  padding: theme.spacing(0.5, 2),\r\n  fontWeight: 800,\r\n  fontSize: 13,\r\n  color: 'white'\r\n}));\r\n\r\nPlanStatus.propTypes = {\r\n  planProps: PropTypes.func\r\n};\r\n\r\nexport default function PlanStatus({ planProps }) {\r\n  const theme = useTheme();\r\n  const { sessionId } = useParams();\r\n  const { user } = useAuth();\r\n  const { createCheckoutSession, updatePaidStatus } = useAdmin();\r\n  const dispatch = useDispatch();\r\n\r\n  const { userList } = useSelector((state) => state.user);\r\n\r\n  const [planType, setPlanType] = useState('yearly');\r\n  const [planPrice, setPlanPrice] = useState(0);\r\n  const [activeUsers, setActiveUsers] = useState(0);\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const [expiredDate, setExpiredDate] = useState('');\r\n  const [remainedDays, setRemainedDays] = useState(0);\r\n  const [plan, setPlan] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (sessionId !== undefined && user.customerId !== null) {\r\n      if (sessionId === user.customerId) {\r\n        setPlan('PREMIUM');\r\n        const payData = {\r\n          planType: 'premium',\r\n          isPaid: 1\r\n        };\r\n        updatePaidStatus({ payData });\r\n      }\r\n    }\r\n  }, [sessionId, user]);\r\n\r\n  useEffect(() => {\r\n    setExpiredDate(user.expiredDay);\r\n    setRemainedDays(user.remainedDays);\r\n    setPlan(user.planType.toUpperCase());\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setActiveUsers(userList.length);\r\n    if (planType === 'yearly') {\r\n      setPlanPrice(userList.length * 5);\r\n      planProps(5);\r\n    } else if (planType === 'monthly') {\r\n      setPlanPrice(userList.length * 7);\r\n      planProps(7);\r\n    }\r\n  }, [planType, userList]);\r\n\r\n  const handleRadioChange = (event) => {\r\n    setPlanType(event.target.value);\r\n  };\r\n\r\n  const handleClickCheckout = async () => {\r\n    setIsSubmitting(true);\r\n    const payData = {\r\n      trialEnd: remainedDays,\r\n      quantity: activeUsers,\r\n      plan: planType\r\n    };\r\n    const url = await createCheckoutSession({ payData });\r\n    setIsSubmitting(false);\r\n    window.location.href = url;\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent\r\n        sx={{\r\n          [theme.breakpoints.down('sm')]: { padding: theme.spacing(2.5, 0) }\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            borderBottom: '1px solid lightgrey',\r\n            mb: 2,\r\n            padding: theme.spacing(2),\r\n            [theme.breakpoints.down('sm')]: {\r\n              display: 'block',\r\n              textAlign: 'center'\r\n            }\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              [theme.breakpoints.down('sm')]: {\r\n                mb: 1,\r\n                display: 'block'\r\n              }\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" sx={{ mr: 1, py: 0.3 }}>\r\n              Subscription\r\n            </Typography>\r\n            <YellowBadge>{plan}</YellowBadge>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              [theme.breakpoints.down('sm')]: {\r\n                display: 'block',\r\n                mb: 1\r\n              }\r\n            }}\r\n          >\r\n            {plan === 'TRIAL' && (\r\n              <>\r\n                <Typography>ends on</Typography>\r\n                <Box m={1} />\r\n                <GreyBadge>{expiredDate}</GreyBadge>\r\n                <Box m={1} />\r\n                <RedBadge>{remainedDays} Days Left</RedBadge>\r\n              </>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <Box>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={3}>\r\n              <Box sx={{ textAlign: 'center' }}>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center'\r\n                  }}\r\n                >\r\n                  <Typography variant=\"h4\">{activeUsers}</Typography>\r\n                  <Typography variant=\"subtitle1\">\r\n                    &nbsp; Active Users\r\n                  </Typography>\r\n                </Box>\r\n                <Typography variant=\"caption\">in the past 30 days</Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  borderRight: '1px solid lightgrey',\r\n                  borderLeft: '1px solid lightgrey',\r\n                  [theme.breakpoints.down('sm')]: {\r\n                    borderRight: '0px solid lightgrey',\r\n                    borderLeft: '0px solid lightgrey',\r\n                    display: 'block',\r\n                    textAlign: 'center'\r\n                  }\r\n                }}\r\n              >\r\n                <Box sx={{ textAlign: 'center', mr: 2 }}>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center'\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"h4\">${planPrice}</Typography>\r\n                    <Typography variant=\"subtitle1\">&nbsp; /month</Typography>\r\n                  </Box>\r\n                  <Typography variant=\"caption\">\r\n                    {activeUsers} active users x ${planPrice}\r\n                  </Typography>\r\n                </Box>\r\n                <Box>\r\n                  <FormControl component=\"fieldset\">\r\n                    <RadioGroup\r\n                      row\r\n                      aria-label=\"position\"\r\n                      name=\"position\"\r\n                      defaultValue=\"top\"\r\n                      value={planType}\r\n                      onChange={handleRadioChange}\r\n                    >\r\n                      <FormControlLabel\r\n                        value=\"yearly\"\r\n                        control={<Radio color=\"secondary\" />}\r\n                        label=\"Yearly\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"monthly\"\r\n                        control={<Radio color=\"secondary\" />}\r\n                        label=\"Monthly\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <Box sx={{ py: 2, textAlign: 'center' }}>\r\n                <LoadingButton\r\n                  type=\"button\"\r\n                  pending={isSubmitting}\r\n                  disabled={plan === 'PREMIUM' || plan === 'ENTERPRISE'}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={handleClickCheckout}\r\n                  startIcon={<CreditCardIcon />}\r\n                  endIcon={<ArrowForwardIcon />}\r\n                  sx={{ minWidth: 210 }}\r\n                >\r\n                  Upgrade plan now\r\n                </LoadingButton>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Card, Button, Typography, Box } from '@material-ui/core';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n//\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  position: 'relative',\n  alignItems: 'left',\n  justifyContent: 'space-between',\n  flexDirection: 'column',\n  padding: theme.spacing(3),\n  [theme.breakpoints.up(414)]: {\n    padding: theme.spacing(5)\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nPricingPlanCard.propTypes = {\n  index: PropTypes.number,\n  card: PropTypes.object\n};\n\nconst ManropeRegular = \"'ManropeRegular', sans-serif\";\nconst PoppinsRegular = \"'PoppinsRegular', sans-serif\";\n\nexport default function PricingPlanCard({ card, index }) {\n  const {\n    subscription,\n    icon,\n    price,\n    caption,\n    lists,\n    labelAction,\n    backColor\n  } = card;\n\n  return (\n    <RootStyle\n      sx={{\n        backgroundColor: backColor,\n        boxShadow:\n          '0 0 2px 0 rgb(145 158 171 / 24%), 0 16px 32px -4px rgb(145 158 171 / 24%)',\n        borderRadius: '40px'\n      }}\n    >\n      <Box\n        component=\"img\"\n        alt={subscription}\n        src={icon}\n        sx={{ width: 80, height: 80, mt: 3 }}\n      />\n      <Box sx={{ display: 'flex', justifyContent: 'flex-start', my: 1 }}>\n        <Typography\n          variant=\"subtitle1\"\n          sx={{ color: 'text.secondary', fontFamily: PoppinsRegular }}\n        >\n          {index !== 2 ? '$' : ''}\n        </Typography>\n        {index === 0 || index === 1 ? (\n          <Typography variant=\"h3\" sx={{ fontFamily: PoppinsRegular }}>\n            {price}\n          </Typography>\n        ) : (\n          <Typography variant=\"h5\">Tailored</Typography>\n        )}\n\n        {index === 1 ? (\n          <Typography\n            gutterBottom\n            component=\"span\"\n            variant=\"subtitle2\"\n            sx={{\n              marginLeft: '10px',\n              alignSelf: 'flex-end',\n              fontFamily: PoppinsRegular\n            }}\n          >\n            / active user* /month*\n          </Typography>\n        ) : (\n          ''\n        )}\n      </Box>\n\n      <Typography variant=\"h3\" sx={{ fontFamily: PoppinsRegular }}>\n        {subscription}\n      </Typography>\n\n      <Typography\n        variant=\"body2\"\n        sx={{\n          color: 'black',\n          textTransform: 'capitalize',\n          fontFamily: ManropeRegular\n        }}\n      >\n        {caption}\n      </Typography>\n\n      <Box\n        component=\"ul\"\n        sx={{\n          my: 2,\n          width: '100%',\n          ...(subscription === 'Enterprise' && { marginBottom: '55px' })\n        }}\n      >\n        {lists.map((item) => (\n          <Box\n            key={item.text}\n            component=\"li\"\n            sx={{\n              display: 'flex',\n              typography: 'body2',\n              alignItems: 'center',\n              color: item.isAvailable ? 'text.primary' : 'text.disabled',\n              '&:not(:last-of-type)': { mb: 1 }\n            }}\n          >\n            <Box\n              component={Icon}\n              icon={checkmarkFill}\n              sx={{ width: 20, height: 20, mr: 1.5 }}\n            />\n            <Typography\n              variant=\"body1\"\n              sx={{\n                fontFamily: ManropeRegular\n              }}\n            >\n              {item.text}\n            </Typography>\n          </Box>\n        ))}\n      </Box>\n\n      {subscription !== 'Free' && (\n        <Button\n          size=\"large\"\n          variant=\"contained\"\n          component={RouterLink}\n          to={PATH_DASHBOARD.root}\n          color=\"warning\"\n          sx={{\n            marginTop: '20px',\n            backgroundColor: '#2E2836',\n            color: 'white',\n            fontSize: '18px',\n            fontFamily: ManropeRegular,\n            '&:hover': {\n              backgroundColor: '#575058'\n            }\n          }}\n        >\n          {labelAction}\n        </Button>\n      )}\n    </RootStyle>\n  );\n}\n","import React, { useState, useEffect } from 'react';\r\n// import { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Container, Box, Grid } from '@material-ui/core';\r\n\r\nimport PlanStatus from './PlanStatus';\r\nimport PricingPlanCard from './PricingPlanCard';\r\n\r\nexport default function PlanContent() {\r\n  // const theme = useTheme();\r\n  const [plans, setPlans] = useState(PLANS);\r\n\r\n  useEffect(() => {\r\n    setPlans(PLANS);\r\n  }, []);\r\n\r\n  const handlePlanPrice = (price) => {\r\n    if (plans.length > 0) {\r\n      const tmpPlans = plans;\r\n      tmpPlans[1].price = price;\r\n      setPlans([...tmpPlans]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <PlanStatus planProps={handlePlanPrice} />\r\n      <Box m={3} />\r\n      <Grid container spacing={3}>\r\n        {plans.map((card, index) => (\r\n          <Grid item xs={12} md={6} lg={4} key={card.subscription}>\r\n            <PricingPlanCard card={card} index={index} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst PLANS = [\r\n  {\r\n    subscription: 'Free',\r\n    icon: '/static/how-it-works/plan1.webp',\r\n    price: 0,\r\n    caption: 'For now & for ever!',\r\n    lists: [\r\n      { text: 'Basic features', isAvailable: true },\r\n      { text: 'Up to 50 users', isAvailable: true },\r\n      { text: 'Slack integration', isAvailable: true },\r\n      { text: 'Teams integration', isAvailable: true }\r\n    ],\r\n    backColor: '#F4F1FF',\r\n    labelAction: 'Get Started'\r\n  },\r\n  {\r\n    subscription: 'Premium',\r\n    icon: '/static/how-it-works/plan2.webp',\r\n    price: 5,\r\n    caption: 'Everything in Free plan +',\r\n    lists: [\r\n      { text: 'Advanced features', isAvailable: true },\r\n      { text: 'Unlimited users', isAvailable: true },\r\n      { text: 'Analytics dashboard', isAvailable: true },\r\n      { text: 'Unlimited integrations', isAvailable: true }\r\n    ],\r\n    backColor: '#FFFFFF',\r\n    labelAction: 'Upgrade now'\r\n  },\r\n  {\r\n    subscription: 'Enterprise',\r\n    icon: '/static/how-it-works/plan3.webp',\r\n    price: 9.99,\r\n    caption: 'Suitable for large organizations',\r\n    lists: [\r\n      { text: 'Dedicated Manager', isAvailable: true },\r\n      { text: 'Customized contracts', isAvailable: true }\r\n    ],\r\n    backColor: '#FBE489',\r\n    labelAction: 'Contact us'\r\n  }\r\n];\r\n","// components\nimport { Container } from '@material-ui/core';\n\nimport Page from '../components/Page';\n\nimport { PlanContent } from '../components/dashboard-plans';\nimport HeaderDashboard from '../components/HeaderDashboard';\nimport { PATH_DASHBOARD } from '../routes/paths';\n// ----------------------------------------------------------------------\n\nexport default function DashboardPlanPage() {\n  return (\n    <Page title=\"Thimble | Plans\">\n      <Container maxWidth=\"xl\">\n        <HeaderDashboard\n          heading=\"Plans\"\n          links={[\n            { name: 'Admin', href: PATH_DASHBOARD.general.home },\n            { name: 'Plans' }\n          ]}\n        />\n        <PlanContent />\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}