{"version":3,"sources":["components/Page.js","components/dashboard-component/BaseOptionChart.js","components/dashboard-component/TeamCategoryGroup.js","components/dashboard-component/DayStatusButtonGroup.js","components/dashboard-component/SelftSettingButton.js","components/dashboard-component/UserScheduleStatus.js","components/dashboard-component/Heatmap.js","components/dashboard-component/BlockSchedule.js","components/dashboard-component/TypeButton.js","components/dashboard-component/SettingDialog.js","components/dashboard-component/SchedulePopupContent.js","hooks/useGeneral.js","../node_modules/@material-ui/icons/ArrowBackIos.js","../node_modules/@material-ui/icons/ArrowForwardIos.js","components/dashboard-component/DayScheduleButton.js","components/dashboard-calendar/CalendarCard.js","components/dashboard-calendar/RightSideBar.js","components/dashboard-calendar/CalendarContent.js","views/DashboardCalendarPage.js"],"names":["Page","forwardRef","children","title","other","ref","propTypes","PropTypes","node","isRequired","string","useStyles","makeStyles","theme","createStyles","border","boxShadow","customShadows","z24","color","palette","text","primary","borderRadius","shape","borderRadiusSm","backgroundColor","background","default","fontWeight","typography","fontWeightBold","grey","mode","borderBottomColor","paper","padding","alignItems","display","marginTop","marginRight","lineHeight","textTransform","BaseOptionChart","useTheme","LABEL_TOTAL","show","label","secondary","subtitle2","LABEL_VALUE","offsetY","h3","colors","main","warning","info","error","success","chart","toolbar","zoom","enabled","foreColor","disabled","fontFamily","states","hover","filter","type","value","active","fill","opacity","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","width","curve","lineCap","grid","strokeDashArray","borderColor","divider","xaxis","axisBorder","axisTicks","markers","size","strokeColors","tooltip","x","legend","fontSize","position","horizontalAlign","radius","itemMargin","horizontal","labels","plotOptions","pie","donut","total","radialBar","track","strokeWidth","radar","polygons","connectorColors","StyledToggleButtonGroup","withStyles","grouped","spacing","marginBottom","ToggleButtonGroup","TeamCategoryGroup","daygroups","teamInitProps","teamStatusProps","sx","categories","setCategories","React","useState","useEffect","onChange","event","newCategories","aria-label","textAlign","mb","map","item","id","borderLeft","variant","DayStatusButtonGroup","officeGroups","statusProps","officeInitProps","isMulti","setType","types","setTypes","newTypes","style","height","mr","heigth","role","icon","paddingTop","ml","exclusive","newType","PopoverStyle","Popover","ScheduleDivider","styled","zIndex","top","left","transform","SelfSettingButton","schedule","halfday","work","detailInfo","statusTitle","weekTitle","notStatus","iconProps","anchorEl","setAnchorEl","isHalf","setHalf","mInit","setMInit","aInit","setAInit","user","useAuth","undefined","morning","sche","index","afternoon","handleClose","open","Boolean","aria-describedby","onClick","currentTarget","py","px","breakpoints","down","justifyContent","alt","firstname","src","photoURL","minWidth","up","onClose","anchorOrigin","vertical","transformOrigin","Schedule","icon1","icon2","detail1","detail2","status","root","heading","pxToRem","flexBasis","flexShrink","secondaryHeading","UserScheduleStatus","notStatusUsers","scheduleUsers","classes","expanded","setExpanded","handleChange","panel","isExpanded","handleProfile","console","log","className","schTitle","margin","expandIcon","aria-controls","occupancy","isCalendar","emoji","users","length","capacity","max","name","avatarURL","button","marginLeft","Heatmap","chatData","setChatData","isMobile","setIsMobile","upSm","useMediaQuery","chartOptions","merge","sparkline","hollow","common","white","series","options","Block","Box","Typography","gutterBottom","Paper","overflowY","p","minHeight","flexWrap","TypeButton","itemAlign","LeftInit","RightInit","not","a","b","indexOf","intersection","AlertDialog","setOpen","checked","setChecked","setLeft","right","setRight","leftChecked","rightChecked","customList","items","List","dense","component","labelId","ListItem","currentIndex","newChecked","push","splice","selected","ListItemIcon","ListItemText","cursor","Dialog","aria-labelledby","DialogContent","letterSpacing","Button","concat","DialogActions","autoFocus","ListWrapperStyle","SchedulePopupContent","dispatch","useDispatch","organizations","useSelector","state","adminSetting","selectedMorning","setSelectedMorning","selectedAfternoon","setSelectedAfternoon","setIsHalf","isHalfOrg","setIsHalfOrg","morningDetail","setMorningDetail","afternoonDetail","setAfternoonDetail","getOrganizations","result","features","isHalfDays","Card","CardContent","handleListItemClickMorning","handleListItemClickAfternoon","ToggleButton","useUserManage","updateSchedule","updatedSchedule","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","DayScheduleButton","year","month","day","officeFilterId","officeInfo","isSelected","Selection","setOccupancy","office","transition","Weeks","Months","MonthDays","init","date","Date","getFirstDay","getFullYear","getMonth","y","m","getMonthNamebyNumber","GridContainer","GridItem","flex","CalendarCard","daystatus","allStatuses","viewDetailByClick","setMonth","setYear","calendar","setCalendar","count","setCount","isDisableNext","setIsDisableNext","isDisableBack","setIsDisableBack","min","setMin","setMax","mRange","monthRange","isOdd","monthData","calendarInfo","days","allStatus","schedules","monthCalendar","weekdays","weeks","dayObj","i","newData","stat","dData","rObj","userId","data","schArr","userArr","isWork","schObj","parseInt","getCalendar","monthday","firstDay","getDay","startPos","endPos","res","row","j","k","pop","getDaybyWeek","handleSelected","agenda","wIndex","dIndex","IconButton","newCount","week","RootStyle","RightSideBar","todayTitle","cToday","isOpenSidebar","onCloseSidebar","pathname","useLocation","setIcon","setIsWork","detail","setDetail","setWeekTitle","notStatusYet","setNotStatusYet","sTitle","setTitle","months","mIndex","renderContent","Scrollbar","mt","Drawer","anchor","PaperProps","CalendarContent","useGeneral","officeList","teamList","allUsers","general","teams","setTeams","teamIds","setTeamIds","offices","setOffices","officeIds","setOfficeIds","initialStatus","calendarProps","setCalendarProps","setTodayTitle","setCToday","setSchedule","setAllStatuses","allMembers","setAllMembers","setScheduleUsers","setNotStatusUsers","getOfficeList","getTeamList","getAllStatusById","getUsersByCompany","curr","today","getDate","dayOfweek","WeekListTitles","tmpMonth","tmpYear","tmpTodaytitle","yearData","mDay","setDate","dayListIndex","OfficeStatus","TeamStatus","team","statuses","basicList","rowObj","basic","isActive","custom","isSet","sUser","sIndex","updatedUsers","member","userObj","Container","maxWidth","selectedIds","teamStatus","emoji1","emoji2","resIcon","dayStatus","CalendarSchedule","settingDay","then","CalendarPage"],"mappings":"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","file":"static/js/21.13bf4aab.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// material\nimport { Box } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { useTheme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    '@global': {\r\n      // Tooltip\r\n      '.apexcharts-tooltip,.apexcharts-xaxistooltip': {\r\n        border: '0 !important',\r\n        boxShadow: `${theme.customShadows.z24} !important`,\r\n        color: `${theme.palette.text.primary} !important`,\r\n        borderRadius: `${theme.shape.borderRadiusSm}px !important`,\r\n        backgroundColor: `${theme.palette.background.default} !important`\r\n      },\r\n      '.apexcharts-tooltip-title': {\r\n        border: '0 !important',\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        backgroundColor: `${theme.palette.grey[500_16]} !important`,\r\n        color:\r\n          theme.palette.text[\r\n            theme.palette.mode === 'light' ? 'secondary' : 'primary'\r\n          ]\r\n      },\r\n      '.apexcharts-xaxistooltip-bottom': {\r\n        '&:before': {\r\n          borderBottomColor: 'transparent !important'\r\n        },\r\n        '&:after': {\r\n          borderBottomColor: `${theme.palette.background.paper} !important`\r\n        }\r\n      },\r\n\r\n      // Legend\r\n      '.apexcharts-legend': {\r\n        padding: '0 !important'\r\n      },\r\n      '.apexcharts-legend-series': {\r\n        alignItems: 'center',\r\n        display: 'flex !important'\r\n      },\r\n      '.apexcharts-legend-marker': {\r\n        marginTop: '2px !important',\r\n        marginRight: '8px !important'\r\n      },\r\n      '.apexcharts-legend-text': {\r\n        lineHeight: '18px',\r\n        textTransform: 'capitalize'\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport default function BaseOptionChart() {\r\n  useStyles();\r\n  const theme = useTheme();\r\n\r\n  const LABEL_TOTAL = {\r\n    show: true,\r\n    label: 'Total',\r\n    color: theme.palette.text.secondary,\r\n    ...theme.typography.subtitle2\r\n  };\r\n\r\n  const LABEL_VALUE = {\r\n    offsetY: 8,\r\n    color: theme.palette.text.primary,\r\n    ...theme.typography.h3\r\n  };\r\n\r\n  return {\r\n    // Colors\r\n    colors: [\r\n      theme.palette.primary.main,\r\n      theme.palette.warning.main,\r\n      theme.palette.info.main,\r\n      theme.palette.error.main,\r\n      theme.palette.success.main\r\n    ],\r\n\r\n    // Chart\r\n    chart: {\r\n      toolbar: { show: false },\r\n      zoom: { enabled: false },\r\n      // animations: { enabled: false },\r\n      foreColor: theme.palette.text.disabled,\r\n      fontFamily: theme.typography.fontFamily\r\n    },\r\n\r\n    // States\r\n    states: {\r\n      hover: {\r\n        filter: {\r\n          type: 'lighten',\r\n          value: 0.04\r\n        }\r\n      },\r\n      active: {\r\n        filter: {\r\n          type: 'darken',\r\n          value: 0.88\r\n        }\r\n      }\r\n    },\r\n\r\n    // Fill\r\n    fill: {\r\n      opacity: 1,\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 0,\r\n        opacityFrom: 0.4,\r\n        opacityTo: 0,\r\n        stops: [0, 100]\r\n      }\r\n    },\r\n\r\n    // Datalabels\r\n    dataLabels: { enabled: false },\r\n\r\n    // Stroke\r\n    stroke: {\r\n      width: 3,\r\n      curve: 'smooth',\r\n      lineCap: 'round'\r\n    },\r\n\r\n    // Grid\r\n    grid: {\r\n      strokeDashArray: 3,\r\n      borderColor: theme.palette.divider\r\n    },\r\n\r\n    // Xaxis\r\n    xaxis: {\r\n      axisBorder: { show: false },\r\n      axisTicks: { show: false }\r\n    },\r\n\r\n    // Markers\r\n    markers: {\r\n      size: 0,\r\n      strokeColors: theme.palette.background.paper\r\n    },\r\n\r\n    // Tooltip\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    },\r\n\r\n    // Legend\r\n    legend: {\r\n      show: true,\r\n      fontSize: 13,\r\n      position: 'top',\r\n      horizontalAlign: 'right',\r\n      markers: { radius: 12 },\r\n      itemMargin: { horizontal: 12 },\r\n      labels: {\r\n        colors: theme.palette.text.primary\r\n      }\r\n    },\r\n\r\n    // plotOptions\r\n    plotOptions: {\r\n      // Pie + Donut\r\n      pie: {\r\n        donut: {\r\n          labels: {\r\n            show: true,\r\n            value: LABEL_VALUE,\r\n            total: LABEL_TOTAL\r\n          }\r\n        }\r\n      },\r\n      // Radialbar\r\n      radialBar: {\r\n        track: {\r\n          strokeWidth: '100%',\r\n          background: theme.palette.grey[500_16]\r\n        },\r\n        dataLabels: {\r\n          value: LABEL_VALUE,\r\n          total: LABEL_TOTAL\r\n        }\r\n      },\r\n      // Radar\r\n      radar: {\r\n        polygons: {\r\n          strokeWidth: 1,\r\n          fill: { colors: ['transparent'] },\r\n          strokeColors: theme.palette.divider,\r\n          connectorColors: theme.palette.divider\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { withStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Typography, ToggleButtonGroup, ToggleButton } from '@material-ui/core';\r\n\r\nTeamCategoryGroup.propTypes = {\r\n  daygroups: PropTypes.array,\r\n  teamInitProps: PropTypes.array,\r\n  teamStatusProps: PropTypes.func,\r\n  sx: PropTypes.object\r\n};\r\n\r\nconst StyledToggleButtonGroup = withStyles((theme) => ({\r\n  grouped: {\r\n    marginRight: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}))(ToggleButtonGroup);\r\n\r\nexport default function TeamCategoryGroup({\r\n  daygroups,\r\n  teamInitProps,\r\n  teamStatusProps,\r\n  sx\r\n}) {\r\n  const theme = useTheme();\r\n\r\n  const [categories, setCategories] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    setCategories(teamInitProps);\r\n  }, [teamInitProps]);\r\n\r\n  const handleCategories = (event, newCategories) => {\r\n    teamStatusProps(newCategories);\r\n    setCategories(newCategories);\r\n  };\r\n\r\n  return (\r\n    <StyledToggleButtonGroup\r\n      value={categories}\r\n      onChange={handleCategories}\r\n      aria-label=\"team category\"\r\n      sx={{ display: 'block', textAlign: 'center', mb: 3, ...sx }}\r\n    >\r\n      {daygroups.map((item) => (\r\n        <ToggleButton\r\n          key={item.id}\r\n          value={item.id}\r\n          sx={{\r\n            borderColor: item.color,\r\n            borderRadius: `${theme.spacing(3)} !important`,\r\n            color: item.color,\r\n            borderLeft: `1px solid ${item.color} !important`,\r\n            '&.Mui-selected': {\r\n              color: 'white',\r\n              backgroundColor: item.color\r\n            },\r\n            '&.Mui-selected:hover': {\r\n              backgroundColor: item.color\r\n            },\r\n            ...sx\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 700 }}>\r\n            {item.label}\r\n          </Typography>\r\n        </ToggleButton>\r\n      ))}\r\n    </StyledToggleButtonGroup>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React, { useEffect } from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  ToggleButtonGroup,\r\n  ToggleButton\r\n} from '@material-ui/core';\r\n\r\nDayStatusButtonGroup.propTypes = {\r\n  officeGroups: PropTypes.array.isRequired,\r\n  statusProps: PropTypes.func,\r\n  officeInitProps: PropTypes.array,\r\n  isMulti: PropTypes.bool,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function DayStatusButtonGroup({\r\n  officeGroups,\r\n  statusProps,\r\n  officeInitProps,\r\n  isMulti,\r\n  sx\r\n}) {\r\n  const [type, setType] = React.useState(0);\r\n  const [types, setTypes] = React.useState([]);\r\n\r\n  const handleType = (event, newType) => {\r\n    if (newType !== null) {\r\n      setType(newType);\r\n      statusProps([newType]);\r\n    }\r\n  };\r\n\r\n  const handleTypes = (event, newTypes) => {\r\n    statusProps(newTypes);\r\n    setTypes(newTypes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isMulti) {\r\n      setTypes(officeInitProps);\r\n    } else {\r\n      setType(officeInitProps[0]);\r\n    }\r\n  }, [officeInitProps, isMulti]);\r\n  return (\r\n    <>\r\n      {isMulti ? (\r\n        <ToggleButtonGroup\r\n          value={types}\r\n          onChange={handleTypes}\r\n          aria-label=\"day type\"\r\n          sx={{ display: 'block', textAlign: 'center', mb: 3, ...sx }}\r\n        >\r\n          {officeGroups.map((item) => (\r\n            <ToggleButton\r\n              key={item.id}\r\n              value={item.id}\r\n              style={{ height: '42px' }}\r\n              sx={{\r\n                mr: 1,\r\n                mb: 1,\r\n                heigth: '42px !important',\r\n                borderRadius: '20px !important',\r\n                borderLeft: '1px solid #D5D9DF !important',\r\n                '&.Mui-selected': {\r\n                  border: '1px solid #00AB55',\r\n                  borderLeft: '1px solid #00AB55 !important',\r\n                  color: '#00AB55',\r\n                  backgroundColor: 'white'\r\n                }\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex' }}>\r\n                <span\r\n                  role=\"img\"\r\n                  aria-label=\"Panda\"\r\n                  style={{ fontSize: '23px' }}\r\n                >\r\n                  {item.icon}\r\n                </span>\r\n                <Typography variant=\"body2\" sx={{ paddingTop: 1, ml: 1 }}>\r\n                  {item.label}\r\n                </Typography>\r\n              </Box>\r\n            </ToggleButton>\r\n          ))}\r\n        </ToggleButtonGroup>\r\n      ) : (\r\n        <ToggleButtonGroup\r\n          value={type}\r\n          exclusive\r\n          onChange={handleType}\r\n          aria-label=\"day type\"\r\n          sx={{ display: 'block', textAlign: 'center', mb: 3 }}\r\n        >\r\n          {officeGroups.map((item) => (\r\n            <ToggleButton\r\n              key={item.id}\r\n              value={item.id}\r\n              style={{ height: '42px' }}\r\n              sx={{\r\n                mr: 1,\r\n                mb: 1,\r\n                heigth: '42px !important',\r\n                borderRadius: '20px !important',\r\n                borderLeft: '1px solid #D5D9DF !important',\r\n                '&.Mui-selected': {\r\n                  border: '1px solid #00AB55',\r\n                  borderLeft: '1px solid #00AB55 !important',\r\n                  color: '#00AB55',\r\n                  backgroundColor: 'white'\r\n                }\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex' }}>\r\n                <span\r\n                  role=\"img\"\r\n                  aria-label=\"Panda\"\r\n                  style={{ fontSize: '23px' }}\r\n                >\r\n                  {item.icon}\r\n                </span>\r\n                <Typography variant=\"body2\" sx={{ paddingTop: 1, ml: 1 }}>\r\n                  {item.label}\r\n                </Typography>\r\n              </Box>\r\n            </ToggleButton>\r\n          ))}\r\n        </ToggleButtonGroup>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  withStyles,\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\n\r\nimport { Button, Popover, Typography, Box } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport useAuth from '../../hooks/useAuth';\r\nimport PopupContent from './SchedulePopupContent';\r\n\r\nconst PopoverStyle = withStyles(() => ({\r\n  paper: {\r\n    borderRadius: 24\r\n  }\r\n}))(Popover);\r\n\r\nconst ScheduleDivider = styled('div')(() => ({\r\n  position: 'absolute',\r\n  zIndex: 10,\r\n  top: 5,\r\n  left: '50%',\r\n  width: '2px',\r\n  height: '40px',\r\n  borderRadius: '8px',\r\n  backgroundColor: '#e7ecf5',\r\n  transform: 'rotate(15deg)'\r\n}));\r\n\r\nSelfSettingButton.propTypes = {\r\n  schedule: PropTypes.array,\r\n  icon: PropTypes.string,\r\n  halfday: PropTypes.bool,\r\n  work: PropTypes.bool,\r\n  detailInfo: PropTypes.object,\r\n  statusTitle: PropTypes.string,\r\n  weekTitle: PropTypes.string,\r\n  notStatus: PropTypes.bool,\r\n  iconProps: PropTypes.func\r\n};\r\n\r\nexport default function SelfSettingButton({\r\n  schedule,\r\n  icon,\r\n  halfday,\r\n  work,\r\n  detailInfo,\r\n  statusTitle,\r\n  weekTitle,\r\n  notStatus,\r\n  iconProps\r\n}) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [isHalf, setHalf] = useState(false);\r\n  const [mInit, setMInit] = useState(0);\r\n  const [aInit, setAInit] = useState(0);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (detailInfo.morning !== undefined) {\r\n      schedule.map((sche, index) => {\r\n        if (\r\n          sche.id === detailInfo.morning.id &&\r\n          sche.type === detailInfo.morning.type\r\n        ) {\r\n          setMInit(index);\r\n        }\r\n        if (\r\n          sche.id === detailInfo.afternoon.id &&\r\n          sche.type === detailInfo.afternoon.type\r\n        ) {\r\n          setAInit(index);\r\n        }\r\n      });\r\n    }\r\n  }, [detailInfo, schedule]);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const changeIcon = (icon1, icon2, detail1, detail2, status) => {\r\n    handleClose();\r\n    setHalf(status);\r\n    iconProps(icon1, icon2, detail1, detail2, status);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-describedby={id}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n        sx={{\r\n          marginTop: '20px',\r\n          width: '100%',\r\n          py: theme.spacing(1.5),\r\n          px: theme.spacing(3),\r\n          borderRadius: theme.spacing(3),\r\n          [theme.breakpoints.down('md')]: {\r\n            py: 1,\r\n            px: 1\r\n          }\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            width: '100%'\r\n          }}\r\n        >\r\n          <Box sx={{ display: 'flex' }}>\r\n            <Avatar\r\n              alt={user.firstname}\r\n              src={user.photoURL}\r\n              sx={{\r\n                width: theme.spacing(6),\r\n                height: theme.spacing(6),\r\n                marginRight: theme.spacing(3),\r\n                [theme.breakpoints.down('md')]: {\r\n                  marginRight: theme.spacing(1)\r\n                }\r\n              }}\r\n            />\r\n            {notStatus ? (\r\n              <Box sx={{ textAlign: 'left' }}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{ py: 1.7, [theme.breakpoints.down('sm')]: { py: 0.5 } }}\r\n                >\r\n                  What's your status for this day?\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <Box sx={{ textAlign: 'left' }}>\r\n                <Typography variant=\"body2\">You are working from</Typography>\r\n                <Typography variant=\"subtitle1\">{statusTitle}</Typography>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              border: '1px solid #E7ECF5',\r\n              borderRadius: '50%',\r\n              padding: theme.spacing(1.2, 0),\r\n              width: 50,\r\n              height: 50,\r\n              position: 'relative',\r\n              ...(!work && { backgroundColor: '#FEB6AC', color: 'black' }),\r\n              [theme.breakpoints.down('md')]: {\r\n                minWidth: '0px',\r\n                width: '50px'\r\n              }\r\n            }}\r\n          >\r\n            <Box\r\n              role=\"img\"\r\n              aria-label=\"Panda\"\r\n              sx={{\r\n                fontSize: '15px',\r\n                [theme.breakpoints.up('md')]: {\r\n                  fontSize: '15px',\r\n                  ...(isHalf && { fontSize: '15px' })\r\n                }\r\n              }}\r\n            >\r\n              {icon}\r\n            </Box>\r\n            {halfday && <ScheduleDivider />}\r\n          </Box>\r\n        </Box>\r\n      </Button>\r\n      <PopoverStyle\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 90,\r\n          horizontal: 'center'\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center'\r\n        }}\r\n        sx={{ backgroundColor: '#00000040' }}\r\n      >\r\n        <PopupContent\r\n          Schedule={schedule}\r\n          iconProps={changeIcon}\r\n          halfday={halfday}\r\n          detailInfo={detailInfo}\r\n          weekTitle={weekTitle}\r\n          mInit={mInit}\r\n          aInit={aInit}\r\n        />\r\n      </PopoverStyle>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React, { useState } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Typography,\r\n  Box,\r\n  Avatar,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  AvatarGroup\r\n} from '@material-ui/core';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport Heatmap from './Heatmap';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n    padding: theme.spacing(1.5, 0, 1, 2),\r\n    minWidth: '200px'\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    padding: theme.spacing(1.5, 0, 1, 2)\r\n  }\r\n}));\r\n\r\nUserScheduleStatus.propTypes = {\r\n  notStatusUsers: PropTypes.array,\r\n  scheduleUsers: PropTypes.array\r\n};\r\n\r\nexport default function UserScheduleStatus({ notStatusUsers, scheduleUsers }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const handleProfile = () => {\r\n    console.log('this is profile');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {scheduleUsers.map((status, index) => (\r\n        <Accordion\r\n          key={index}\r\n          expanded={expanded === status.schTitle}\r\n          onChange={handleChange(status.schTitle)}\r\n          sx={{\r\n            margin: theme.spacing(1, 0, 0),\r\n            border: '1px solid #E7ECF5',\r\n            borderRadius: '12px !important',\r\n            mb: 5,\r\n            '&:before': { display: 'none' }\r\n          }}\r\n        >\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n          >\r\n            <Box\r\n              sx={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between'\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex' }}>\r\n                <Box\r\n                  sx={{\r\n                    position: 'relative',\r\n                    width: 60,\r\n                    height: 60\r\n                  }}\r\n                >\r\n                  {status.type === 'office' ? (\r\n                    <Heatmap occupancy={status.occupancy} isCalendar={false} />\r\n                  ) : (\r\n                    <Heatmap occupancy={0} />\r\n                  )}\r\n                  <Box\r\n                    role=\"img\"\r\n                    aria-label=\"Panda\"\r\n                    sx={{\r\n                      fontSize: '25px',\r\n                      position: 'absolute',\r\n                      top: '50%',\r\n                      left: '50%',\r\n                      transform: 'translate(-50%, -50%)'\r\n                    }}\r\n                  >\r\n                    {status.emoji}\r\n                  </Box>\r\n                </Box>\r\n                <Typography variant=\"subtitle1\" sx={{ py: 2, px: 1 }}>\r\n                  {status.schTitle}{' '}\r\n                  {status.type === 'office' ? (\r\n                    <Typography variant=\"caption\">\r\n                      ({status.users.length}/{status.capacity})\r\n                    </Typography>\r\n                  ) : (\r\n                    <Typography variant=\"caption\">\r\n                      ({status.users.length})\r\n                    </Typography>\r\n                  )}\r\n                </Typography>\r\n              </Box>\r\n\r\n              {expanded !== status.schTitle && (\r\n                <AvatarGroup max={3}>\r\n                  {status.users.map((item, index) => (\r\n                    <Avatar\r\n                      key={index}\r\n                      alt={item.name}\r\n                      src={item.avatarURL}\r\n                      sx={{ width: theme.spacing(5), height: theme.spacing(5) }}\r\n                    />\r\n                  ))}\r\n                </AvatarGroup>\r\n              )}\r\n            </Box>\r\n          </AccordionSummary>\r\n          {/* <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n            sx={{\r\n              '& .css-o4b71y-MuiAccordionSummary-content.Mui-expanded': {\r\n                margin: theme.spacing(1, 0, 0)\r\n              }\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                width: '100%',\r\n                display: 'block'\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex' }}>\r\n                <Box\r\n                  sx={{\r\n                    position: 'relative',\r\n                    width: 60,\r\n                    height: 60\r\n                  }}\r\n                >\r\n                  {status.type === 'office' ? (\r\n                    <Heatmap occupancy={status.occupancy} isCalendar={false} />\r\n                  ) : (\r\n                    <Heatmap occupancy={0} />\r\n                  )}\r\n                  <Box\r\n                    role=\"img\"\r\n                    aria-label=\"Panda\"\r\n                    sx={{\r\n                      fontSize: '25px',\r\n                      position: 'absolute',\r\n                      top: '50%',\r\n                      left: '50%',\r\n                      transform: 'translate(-50%, -50%)'\r\n                    }}\r\n                  >\r\n                    {status.emoji}\r\n                  </Box>\r\n                </Box>\r\n                <Typography variant=\"subtitle1\" sx={{ py: 2, px: 1 }}>\r\n                  {status.schTitle}{' '}\r\n                  {status.type === 'office' ? (\r\n                    <Typography variant=\"caption\">\r\n                      ({status.users.length}/{status.capacity})\r\n                    </Typography>\r\n                  ) : (\r\n                    <Typography variant=\"caption\">\r\n                      ({status.users.length})\r\n                    </Typography>\r\n                  )}\r\n                </Typography>\r\n              </Box>\r\n\r\n              {expanded !== status.schTitle && (\r\n                <AvatarGroup\r\n                  max={3}\r\n                  // sx={{\r\n                  //   justifyContent: 'flex-end',\r\n                  //   marginLeft: '30px',\r\n                  //   marginTop: '5px'\r\n                  // }}\r\n                >\r\n                  {status.users.map((item, index) => (\r\n                    <Avatar\r\n                      key={index}\r\n                      alt={item.name}\r\n                      src={item.avatarURL}\r\n                      sx={{ width: theme.spacing(5), height: theme.spacing(5) }}\r\n                    />\r\n                  ))}\r\n                </AvatarGroup>\r\n              )}\r\n            </Box>\r\n          </AccordionSummary> */}\r\n          <AccordionDetails>\r\n            {status.users.map((item, index) => (\r\n              <ListItem\r\n                key={index}\r\n                button\r\n                onClick={handleProfile}\r\n                sx={{ borderRadius: '10px' }}\r\n              >\r\n                <ListItemIcon sx={{ marginRight: '3px' }}>\r\n                  <Box\r\n                    sx={{\r\n                      width: '50px',\r\n                      height: '50px'\r\n                    }}\r\n                  >\r\n                    <Avatar\r\n                      alt={item.name}\r\n                      src={item.avatarURL}\r\n                      sx={{\r\n                        width: theme.spacing(6),\r\n                        height: theme.spacing(6)\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n      {notStatusUsers.length > 0 && (\r\n        <Accordion\r\n          expanded={expanded === 'not-status'}\r\n          onChange={handleChange('not-status')}\r\n          sx={{\r\n            border: '1px solid #E7ECF5',\r\n            borderRadius: '24px !important',\r\n            mb: 5,\r\n            '&:before': { display: 'none' }\r\n          }}\r\n        >\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n          >\r\n            <Box\r\n              sx={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between'\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex' }}>\r\n                <Box\r\n                  sx={{\r\n                    borderRadius: '50%',\r\n                    border: '3px solid #E7ECF5',\r\n                    width: '50px',\r\n                    height: '50px',\r\n                    textAlign: 'center'\r\n                  }}\r\n                >\r\n                  <span\r\n                    role=\"img\"\r\n                    aria-label=\"Panda\"\r\n                    style={{ fontSize: '25px', marginTop: '10px' }}\r\n                  >\r\n                    🤔\r\n                  </span>\r\n                </Box>\r\n                <Typography variant=\"subtitle1\" sx={{ py: 2, px: 1 }}>\r\n                  No Status yet{' '}\r\n                  <Typography variant=\"caption\">\r\n                    ({notStatusUsers.length})\r\n                  </Typography>\r\n                </Typography>\r\n              </Box>\r\n\r\n              {expanded !== 'not-status' && (\r\n                <AvatarGroup max={3}>\r\n                  {notStatusUsers.map((item, index) => (\r\n                    <Avatar key={index} alt={item.name} src={item.avatarURL} />\r\n                  ))}\r\n                </AvatarGroup>\r\n              )}\r\n            </Box>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            {notStatusUsers.map((item, index) => (\r\n              <ListItem\r\n                key={index}\r\n                button\r\n                onClick={handleProfile}\r\n                sx={{ borderRadius: '10px' }}\r\n              >\r\n                <ListItemIcon>\r\n                  <Box\r\n                    sx={{\r\n                      width: '50px',\r\n                      height: '50px'\r\n                    }}\r\n                  >\r\n                    <Avatar\r\n                      alt={item.name}\r\n                      src={item.avatarURL}\r\n                      sx={{\r\n                        width: theme.spacing(6),\r\n                        height: theme.spacing(6),\r\n                        marginLeft: theme.spacing(-1)\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// avatarURL: \"user.avatarURL\"\r\n// id: 3\r\n// name: \"Zlenko Sofia\"\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { useMediaQuery } from '@material-ui/core';\r\n// utils\r\nimport BaseOptionChart from './BaseOptionChart';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeatmap.propTypes = {\r\n  occupancy: PropTypes.number,\r\n  isCalendar: PropTypes.bool\r\n};\r\n\r\nexport default function Heatmap({ occupancy, isCalendar }) {\r\n  const theme = useTheme();\r\n\r\n  const [chatData, setChatData] = useState([0]);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  const upSm = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  useEffect(() => {\r\n    if (occupancy !== undefined) {\r\n      setChatData([occupancy]);\r\n    }\r\n  }, [occupancy]);\r\n\r\n  useEffect(() => {\r\n    setIsMobile(upSm);\r\n  }, [upSm]);\r\n\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    colors: {\r\n      ...(chatData[0] > 50 && [theme.palette.warning.main]),\r\n      ...(chatData[0] > 75 && [theme.palette.error.main])\r\n    },\r\n    chart: { sparkline: { enabled: true } },\r\n    legend: { show: false },\r\n    plotOptions: {\r\n      radialBar: {\r\n        hollow: { size: '78%' },\r\n        track: { margin: 0 },\r\n        dataLabels: {\r\n          name: { show: false },\r\n          value: {\r\n            offsetY: 6,\r\n            color: theme.palette.common.white,\r\n            fontSize: 1\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {isCalendar ? (\r\n        <>\r\n          {isMobile ? (\r\n            <ReactApexChart\r\n              type=\"radialBar\"\r\n              series={chatData}\r\n              options={chartOptions}\r\n              width={50}\r\n              height={50}\r\n            />\r\n          ) : (\r\n            <ReactApexChart\r\n              type=\"radialBar\"\r\n              series={chatData}\r\n              options={chartOptions}\r\n              width={68}\r\n              height={68}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <ReactApexChart\r\n          type=\"radialBar\"\r\n          series={chatData}\r\n          options={chartOptions}\r\n          width={60}\r\n          height={60}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\n// material\r\nimport { Box, Typography, Paper } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBlock.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function Block({ title, children, sx, ...other }) {\r\n  return (\r\n    <Box sx={{ position: 'relative' }} {...other}>\r\n      {title && (\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"subtitle2\"\r\n          sx={{ color: 'text.secondary' }}\r\n        >\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <Paper\r\n        variant=\"outlined\"\r\n        sx={{\r\n          overflowY: 'auto',\r\n          p: 1,\r\n          minHeight: 60,\r\n          height: 150,\r\n          borderRadius: 1.5,\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          ...sx\r\n        }}\r\n      >\r\n        {children}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Box } from '@material-ui/core';\r\n\r\nTypeButton.propTypes = {\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default function TypeButton({ type }) {\r\n  return (\r\n    <>\r\n      {type === 'all' && (\r\n        <Box sx={{ display: 'flex', itemAlign: 'center' }}>\r\n          {' '}\r\n          ALL DAY <CloseIcon />{' '}\r\n        </Box>\r\n      )}\r\n      {type === 'half' && (\r\n        <Box sx={{ display: 'flex', itemAlign: 'center' }}>\r\n          {' '}\r\n          HALF DAY <AddIcon />{' '}\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\n//------------------------------------------------------------\r\n\r\nconst LeftInit = [\r\n  {\r\n    value: 10,\r\n    label: 'Working remotely',\r\n    icon: '🏡'\r\n  },\r\n  {\r\n    value: 11,\r\n    label: 'On the go',\r\n    icon: '🚶‍♂️'\r\n  }\r\n];\r\n\r\nconst RightInit = [\r\n  {\r\n    value: 20,\r\n    label: 'At the office',\r\n    icon: '💼'\r\n  },\r\n  {\r\n    value: 21,\r\n    label: 'With family',\r\n    icon: '👨‍👨‍👦‍👦'\r\n  }\r\n];\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nexport default function AlertDialog() {\r\n  const theme = useTheme();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState(LeftInit);\r\n  const [right, setRight] = React.useState(RightInit);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleAllRight = () => {\r\n    setRight(right.concat(left));\r\n    setLeft([]);\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleAllLeft = () => {\r\n    setLeft(left.concat(right));\r\n    setRight([]);\r\n  };\r\n\r\n  const customList = (items) => (\r\n    <Paper\r\n      sx={{\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          minWidth: '550px',\r\n          border: '1px solid #E7ECF5',\r\n          mb: 4\r\n        }\r\n      }}\r\n    >\r\n      <List dense component=\"div\" role=\"list\">\r\n        {items.map((item) => {\r\n          const labelId = `transfer-list-item-${item.value}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={labelId}\r\n              role=\"listitem\"\r\n              button\r\n              onClick={handleToggle(item)}\r\n              selected={checked.indexOf(item) !== -1}\r\n              sx={{ borderRadius: 2, mb: 1 }}\r\n            >\r\n              <ListItemIcon>\r\n                <Box\r\n                  sx={{\r\n                    borderRadius: '50%',\r\n                    border: '3px solid #E7ECF5',\r\n                    width: '50px',\r\n                    height: '50px',\r\n                    textAlign: 'center'\r\n                  }}\r\n                >\r\n                  <span\r\n                    role=\"img\"\r\n                    aria-label=\"Panda\"\r\n                    style={{ fontSize: '25px' }}\r\n                  >\r\n                    {item.icon}\r\n                  </span>\r\n                </Box>\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.label} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        component=\"img\"\r\n        src=\"/static/dashboard/home/setting_icon.svg\"\r\n        sx={{ cursor: 'pointer' }}\r\n        onClick={handleClickOpen}\r\n      />\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          sx={{ padding: theme.spacing(3, 3, 1, 3), textAlign: 'center' }}\r\n        >\r\n          Offices preferences\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            textAlign: 'center'\r\n          }}\r\n        >\r\n          Set offices according to the order you want to see first.\r\n        </Typography>\r\n        <DialogContent>\r\n          <Box>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              sx={{\r\n                padding: theme.spacing(4, 3, 1, 3),\r\n                textAlign: 'center',\r\n                letterSpacing: '2px'\r\n              }}\r\n            >\r\n              MAIN OFFICES\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              Main offices are where you go regularly\r\n            </Typography>\r\n            <Box> {customList(left)} </Box>\r\n            <Box sx={{ width: '100%', textAlign: 'center' }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={handleAllRight}\r\n                disabled={left.length === 0}\r\n                aria-label=\"move all right\"\r\n                sx={{ mr: 1, [theme.breakpoints.up('md')]: { mr: 3 } }}\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  src=\"/static/dashboard/home/angle-double-down.svg\"\r\n                  sx={{ height: '30px' }}\r\n                />\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={handleCheckedRight}\r\n                disabled={leftChecked.length === 0}\r\n                aria-label=\"move selected right\"\r\n                sx={{ mr: 1, [theme.breakpoints.up('md')]: { mr: 3 } }}\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  src=\"/static/dashboard/home/angle-down.svg\"\r\n                  sx={{ height: '30px' }}\r\n                />\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={handleCheckedLeft}\r\n                disabled={rightChecked.length === 0}\r\n                aria-label=\"move selected left\"\r\n                sx={{ mr: 1, [theme.breakpoints.up('md')]: { mr: 3 } }}\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  src=\"/static/dashboard/home/angle-up.svg\"\r\n                  sx={{ height: '30px' }}\r\n                />\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={handleAllLeft}\r\n                disabled={right.length === 0}\r\n                aria-label=\"move all left\"\r\n              >\r\n                <Box\r\n                  component=\"img\"\r\n                  src=\"/static/dashboard/home/angle-double-up.svg\"\r\n                  sx={{ height: '30px' }}\r\n                />\r\n              </Button>\r\n            </Box>\r\n            <Typography\r\n              variant=\"subtitle2\"\r\n              sx={{\r\n                padding: theme.spacing(4, 3, 1, 3),\r\n                textAlign: 'center',\r\n                letterSpacing: '2px'\r\n              }}\r\n            >\r\n              SECONDARY OFFICES\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              Secondary offices will be hidden by default\r\n            </Typography>\r\n            <Box>{customList(right)}</Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n            autoFocus\r\n          >\r\n            Validate\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n// material\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  Box,\r\n  List,\r\n  Typography,\r\n  ListItem,\r\n  Button,\r\n  CardContent,\r\n  ListItemText,\r\n  ListItemIcon\r\n} from '@material-ui/core';\r\n\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getOrganizations } from '../../redux/slices/adminSetting';\r\n\r\n// routes\r\n// components\r\nimport BlockSchedule from './BlockSchedule';\r\nimport TypeButton from './TypeButton';\r\nimport SimpleDialogDemo from './SettingDialog';\r\n\r\nSchedulePopupContent.propTypes = {\r\n  mInit: PropTypes.number,\r\n  aInit: PropTypes.number,\r\n  halfday: PropTypes.bool,\r\n  Schedule: PropTypes.array,\r\n  detailInfo: PropTypes.object,\r\n  weekTitle: PropTypes.string,\r\n  iconProps: PropTypes.func\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ListWrapperStyle = styled('div')(() => ({\r\n  width: '100%'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SchedulePopupContent({\r\n  mInit,\r\n  aInit,\r\n  halfday,\r\n  Schedule,\r\n  detailInfo,\r\n  weekTitle,\r\n  iconProps\r\n}) {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const { organizations } = useSelector((state) => state.adminSetting);\r\n\r\n  const [selectedMorning, setSelectedMorning] = useState(mInit);\r\n  const [selectedAfternoon, setSelectedAfternoon] = useState(aInit);\r\n  const [isHalf, setIsHalf] = useState(!halfday);\r\n  const [isHalfOrg, setIsHalfOrg] = useState(false);\r\n\r\n  const [morningDetail, setMorningDetail] = useState({});\r\n  const [afternoonDetail, setAfternoonDetail] = useState({});\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrganizations());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const { result } = organizations;\r\n    if (result.features.isHalfDays === 0) {\r\n      setIsHalf(true);\r\n      setIsHalfOrg(true);\r\n    }\r\n  }, [organizations]);\r\n\r\n  useEffect(() => {\r\n    setSelectedMorning(mInit);\r\n    setSelectedAfternoon(aInit);\r\n  }, [mInit, aInit]);\r\n\r\n  const handleListItemClickMorning = (event, index, id, type) => {\r\n    const detail = {\r\n      id,\r\n      type\r\n    };\r\n    setMorningDetail(detail);\r\n    setSelectedMorning(index);\r\n  };\r\n\r\n  const handleListItemClickAfternoon = (event, index, id, type) => {\r\n    const detail = {\r\n      id,\r\n      type\r\n    };\r\n    setAfternoonDetail(detail);\r\n    setSelectedAfternoon(index);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    iconProps(\r\n      selectedMorning,\r\n      selectedAfternoon,\r\n      morningDetail.id === undefined ? detailInfo.morning : morningDetail,\r\n      afternoonDetail.id === undefined ? detailInfo.afternoon : afternoonDetail,\r\n      !isHalf\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        sx={{\r\n          borderRadius: theme.spacing(2.4),\r\n          [theme.breakpoints.up('sm')]: { minWidth: 350 }\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            padding: '24px 24px 0',\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <Typography variant=\"h5\" sx={{ margin: 'auto' }}>\r\n            {weekTitle}\r\n          </Typography>\r\n          <SimpleDialogDemo />\r\n        </Box>\r\n        <CardContent>\r\n          <Box>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                color: 'rgb(135, 143, 177)',\r\n                mb: 1\r\n              }}\r\n            >\r\n              <Box\r\n                component=\"img\"\r\n                src=\"/static/dashboard/home/light_mode_black_24dp.svg\"\r\n                sx={{ mr: 1 }}\r\n              />\r\n              {!isHalf ? (\r\n                <Typography variant=\"body2\">MORNING</Typography>\r\n              ) : (\r\n                <Typography variant=\"body2\">ALL DAY</Typography>\r\n              )}\r\n            </Box>\r\n            <BlockSchedule sx={{ mb: 3, ...(isHalf && { height: 360 }) }}>\r\n              <ListWrapperStyle>\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                  {Schedule.map((item, index) => (\r\n                    <ListItem\r\n                      key={index}\r\n                      button\r\n                      selected={selectedMorning === index}\r\n                      onClick={(event) =>\r\n                        handleListItemClickMorning(\r\n                          event,\r\n                          index,\r\n                          item.id,\r\n                          item.type\r\n                        )\r\n                      }\r\n                      sx={{ borderRadius: '10px' }}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Box\r\n                          sx={{\r\n                            borderRadius: '50%',\r\n                            border: '3px solid #E7ECF5',\r\n                            width: '50px',\r\n                            height: '50px',\r\n                            textAlign: 'center'\r\n                          }}\r\n                        >\r\n                          <span\r\n                            role=\"img\"\r\n                            aria-label=\"Panda\"\r\n                            style={{ fontSize: '25px' }}\r\n                          >\r\n                            {item.emoji}\r\n                          </span>\r\n                        </Box>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={item.title} />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </ListWrapperStyle>\r\n            </BlockSchedule>\r\n          </Box>\r\n\r\n          <Box sx={{ ...(isHalf && { display: 'none' }) }}>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                color: 'rgb(135, 143, 177)',\r\n                mb: 1\r\n              }}\r\n            >\r\n              <Box\r\n                component=\"img\"\r\n                src=\"/static/dashboard/home/nightlight_black_24dp.svg\"\r\n                sx={{ mr: 1 }}\r\n              />\r\n              <Typography variant=\"body2\">AFTERNOON</Typography>\r\n            </Box>\r\n            <BlockSchedule sx={{ mb: 3 }}>\r\n              <ListWrapperStyle>\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                  {Schedule.map((item, index) => (\r\n                    <ListItem\r\n                      key={index}\r\n                      button\r\n                      selected={selectedAfternoon === index}\r\n                      onClick={(event) =>\r\n                        handleListItemClickAfternoon(\r\n                          event,\r\n                          index,\r\n                          item.id,\r\n                          item.type\r\n                        )\r\n                      }\r\n                      sx={{ borderRadius: '10px' }}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Box\r\n                          sx={{\r\n                            borderRadius: '50%',\r\n                            border: '3px solid #E7ECF5',\r\n                            width: '50px',\r\n                            height: '50px',\r\n                            textAlign: 'center'\r\n                          }}\r\n                        >\r\n                          <span\r\n                            role=\"img\"\r\n                            aria-label=\"Panda\"\r\n                            style={{ fontSize: '25px' }}\r\n                          >\r\n                            {item.emoji}\r\n                          </span>\r\n                        </Box>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={item.title} />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </ListWrapperStyle>\r\n            </BlockSchedule>\r\n          </Box>\r\n\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <ToggleButton\r\n              disabled={isHalfOrg}\r\n              value=\"check\"\r\n              selected={isHalf}\r\n              onChange={() => {\r\n                setIsHalf(!isHalf);\r\n              }}\r\n              sx={{ padding: '5px 10px', minWidth: '110px' }}\r\n            >\r\n              {isHalf ? <TypeButton type=\"all\" /> : <TypeButton type=\"half\" />}\r\n            </ToggleButton>\r\n            <Button variant=\"outlined\" onClick={handleClick}>\r\n              Set Status\r\n            </Button>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import { useDispatch } from 'react-redux';\n// redux\nimport { updateSchedule } from '../redux/slices/general';\n\n// ----------------------------------------------------------------------\n\nexport default function useUserManage() {\n  // JWT Auth\n  const dispatch = useDispatch();\n\n  return {\n    // -------------- Update list ---------------------\n    updateSchedule: ({ updatedSchedule }) =>\n      dispatch(updateSchedule({ updatedSchedule }))\n  };\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.23 20.23L8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');\n\nexports.default = _default;","/* eslint-disable array-callback-return */\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\n\r\nimport { Box, Typography } from '@material-ui/core';\r\n\r\nimport Heatmap from './Heatmap';\r\n\r\nDayScheduleButton.propTypes = {\r\n  year: PropTypes.number,\r\n  month: PropTypes.number,\r\n  day: PropTypes.number,\r\n  officeFilterId: PropTypes.number,\r\n  officeInfo: PropTypes.array,\r\n  icon: PropTypes.string,\r\n  halfday: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n  Selection: PropTypes.func\r\n};\r\n\r\nconst ScheduleDivider = styled('div')(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: '56%',\r\n  top: '7px',\r\n  zIndex: 10,\r\n  width: '2px',\r\n  height: '48px',\r\n  borderRadius: '8px',\r\n  backgroundColor: '#e0e0e0',\r\n  transform: 'rotate(15deg)',\r\n  [theme.breakpoints.down('sm')]: {\r\n    height: '30px'\r\n  }\r\n}));\r\n\r\nexport default function DayScheduleButton({\r\n  year,\r\n  month,\r\n  day,\r\n  officeFilterId,\r\n  officeInfo,\r\n  icon,\r\n  halfday,\r\n  isSelected,\r\n  Selection\r\n}) {\r\n  const theme = useTheme();\r\n\r\n  const [occupancy, setOccupancy] = useState(0);\r\n  useEffect(() => {\r\n    if (officeInfo.length > 0) {\r\n      officeInfo.map((office) => {\r\n        if (office.id === officeFilterId) {\r\n          setOccupancy(office.occupancy);\r\n        }\r\n      });\r\n    }\r\n  }, [officeInfo, officeFilterId]);\r\n\r\n  const handleClick = () => {\r\n    Selection(true, year, month, day);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      onClick={handleClick}\r\n      sx={{\r\n        ...(isSelected && { backgroundColor: '#D6F5EA' }),\r\n        transition: 'all .3s',\r\n        borderRadius: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: '70px',\r\n          margin: 'auto'\r\n        },\r\n        '&:hover': {\r\n          cursor: 'pointer',\r\n          backgroundColor: '#D6F5EA'\r\n        }\r\n      }}\r\n    >\r\n      <Typography variant=\"caption\">{day}</Typography>\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n          width: 60,\r\n          height: 70,\r\n          [theme.breakpoints.down('sm')]: {\r\n            width: 45,\r\n            height: 50\r\n          }\r\n        }}\r\n      >\r\n        <Heatmap occupancy={occupancy} isCalendar />\r\n        <Box\r\n          role=\"img\"\r\n          aria-label=\"Panda\"\r\n          sx={{\r\n            position: 'absolute',\r\n            width: '100%',\r\n            top: '50%',\r\n            left: '56%',\r\n            transform: 'translate(-50%, -50%)',\r\n            fontSize: '12px',\r\n            [theme.breakpoints.up('sm')]: { fontSize: '18px' }\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n        {halfday && <ScheduleDivider />}\r\n      </Box>\r\n      {/* <Box\r\n        sx={{\r\n          position: 'relative',\r\n          borderRadius: '50%',\r\n          overflow: 'hidden',\r\n          width: '60px',\r\n          height: '60px',\r\n          textAlign: 'center',\r\n          margin: 'auto',\r\n          py: 1.2,\r\n          border: '1px solid #e8e8e8',\r\n          [theme.breakpoints.down('sm')]: {\r\n            border: '3px solid #E7ECF5',\r\n            py: 1,\r\n            width: '40px',\r\n            height: '40px'\r\n          }\r\n        }}\r\n      >\r\n        <Box\r\n          role=\"img\"\r\n          aria-label=\"Panda\"\r\n          sx={{\r\n            position: 'absolute',\r\n            width: '100%',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            fontSize: '12px',\r\n            [theme.breakpoints.up('sm')]: { fontSize: '18px' }\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n        {halfday && <ScheduleDivider />}\r\n        <Box m={3} />\r\n      </Box> */}\r\n    </Box>\r\n  );\r\n}\r\n","/* eslint-disable radix */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable array-callback-return */\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { CardContent, IconButton, Box } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getOrganizations } from '../../redux/slices/adminSetting';\r\n\r\nimport DayScheduleButton from '../dashboard-component/DayScheduleButton';\r\n\r\nconst Weeks = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\r\nconst Months = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Set',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec'\r\n];\r\nconst MonthDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\nfunction init() {\r\n  const date = new Date();\r\n  const firstDate = getFirstDay(date.getFullYear(), date.getMonth());\r\n  return firstDate;\r\n}\r\n\r\nfunction getDaybyWeek(year, month) {\r\n  const monthCalendar = [];\r\n  let day = 0;\r\n  let monthday = MonthDays[month];\r\n  const firstDay = getFirstDay(year, month).getDay();\r\n  const startPos = firstDay - 1 < 0 ? 6 : firstDay - 1; // when first day of this month is Sunday.\r\n  if (month === 1) monthday = year % 4 === 0 ? 29 : monthday; // in case of leap year\r\n  const endPos = startPos + monthday - 1;\r\n\r\n  for (let i = 0; i < 42; i += 1) {\r\n    // the position of first day of this month.\r\n    if (i < startPos) monthCalendar[i] = -1;\r\n    else if (i > endPos) monthCalendar[i] = -1;\r\n    else {\r\n      day += 1;\r\n      monthCalendar[i] = day;\r\n    }\r\n  }\r\n\r\n  const res = [];\r\n  for (let i = 0; i < 42; i += 7) {\r\n    const row = [];\r\n    for (let j = 0, k = i; j < 7; j += 1, k += 1) {\r\n      row.push(monthCalendar[k]); // save by week.\r\n    }\r\n    res.push(row);\r\n  }\r\n  if (res[5][0] === -1) res.pop();\r\n  return res;\r\n}\r\n\r\nfunction getCalendar(days, status, allStatus, schedules, month, year) {\r\n  const monthCalendar = [];\r\n\r\n  days.map((weekdays) => {\r\n    const weeks = [];\r\n    for (const day of weekdays) {\r\n      const dayObj = {};\r\n      for (let i = 0; i < status.length; i += 1) {\r\n        dayObj.day = day;\r\n        if (day - 1 === i) {\r\n          // set occupancy by day\r\n          const newData = [];\r\n          allStatus.map((stat) => {\r\n            const dData = stat.schedule[month][day - 1];\r\n            const rObj = {\r\n              userId: stat.userId,\r\n              data: dData\r\n            };\r\n            newData.push(rObj);\r\n          });\r\n\r\n          const schArr = [];\r\n          schedules.map((sche) => {\r\n            if (sche.type === 'office') {\r\n              const userArr = [];\r\n              newData.map((user) => {\r\n                if (user.data.isWork) {\r\n                  if (user.data.isHalf) {\r\n                    if (\r\n                      sche.id === user.data.morning.id &&\r\n                      sche.type === user.data.morning.type\r\n                    ) {\r\n                      userArr.push(user.userId);\r\n                    } else if (\r\n                      sche.id === user.data.afternoon.id &&\r\n                      sche.type === user.data.afternoon.type\r\n                    ) {\r\n                      userArr.push(user.userId);\r\n                    }\r\n                  } else if (!user.data.isHalf) {\r\n                    if (\r\n                      sche.id === user.data.morning.id &&\r\n                      sche.type === user.data.morning.type\r\n                    ) {\r\n                      userArr.push(user.userId);\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n              let schObj = {};\r\n              const occupancy = (userArr.length / sche.capacity) * 100;\r\n              schObj = {\r\n                id: sche.id,\r\n                schTitle: sche.title,\r\n                users: userArr,\r\n                capacity: sche.capacity,\r\n                occupancy: parseInt(occupancy)\r\n              };\r\n              schArr.push(schObj);\r\n            }\r\n          });\r\n\r\n          dayObj.year = year;\r\n          dayObj.month = month;\r\n          dayObj.day = day;\r\n          dayObj.officeInfo = schArr;\r\n          dayObj.icon = status[i].icon;\r\n          dayObj.halfday = status[i].halfday;\r\n          dayObj.selected = false;\r\n          break;\r\n        }\r\n      }\r\n      weeks.push(dayObj);\r\n    }\r\n    monthCalendar.push(weeks);\r\n  });\r\n  return monthCalendar;\r\n}\r\n\r\nfunction getFirstDay(y, m) {\r\n  return new Date(y, m, 1);\r\n}\r\n\r\nfunction getMonthNamebyNumber(month) {\r\n  return Months[month];\r\n}\r\nCalendarCard.propTypes = {\r\n  allStatuses: PropTypes.array,\r\n  schedule: PropTypes.array,\r\n  daystatus: PropTypes.array,\r\n  officeFilterId: PropTypes.number,\r\n  viewDetailByClick: PropTypes.func\r\n};\r\n\r\n// styling conponent\r\nconst GridContainer = styled('div')(() => ({\r\n  display: 'flex'\r\n}));\r\n\r\nconst GridItem = styled('div')(() => ({\r\n  flex: 1\r\n}));\r\n\r\nexport default function CalendarCard({\r\n  daystatus,\r\n  allStatuses,\r\n  schedule,\r\n  officeFilterId,\r\n  viewDetailByClick\r\n}) {\r\n  const theme = useTheme();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { organizations } = useSelector((state) => state.adminSetting);\r\n\r\n  const [month, setMonth] = useState(init().getMonth());\r\n  const [year, setYear] = useState(init().getFullYear());\r\n  const [calendar, setCalendar] = useState([]);\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [isDisableNext, setIsDisableNext] = useState(false);\r\n  const [isDisableBack, setIsDisableBack] = useState(false);\r\n  const [min, setMin] = useState(0);\r\n  const [max, setMax] = useState(0);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrganizations());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const { result } = organizations;\r\n    console.log('Here is Pop', result);\r\n    let mRange = 0;\r\n    if (result !== undefined) {\r\n      mRange = result.calendar.monthRange;\r\n      const isOdd = mRange % 2;\r\n      setMin(1);\r\n      if (isOdd) {\r\n        setMax(mRange);\r\n        setCount((mRange - 1) / 2 + 1);\r\n      } else {\r\n        setMax(mRange + 1);\r\n        setCount(mRange / 2 + 1);\r\n      }\r\n    }\r\n  }, [organizations]);\r\n\r\n  useEffect(() => {\r\n    const monthData = daystatus;\r\n    // was changed regarding allStatuses, schedule\r\n    if (monthData.length > 0) {\r\n      const days = getDaybyWeek(year, month);\r\n      const calendarInfo = getCalendar(\r\n        days,\r\n        monthData[month],\r\n        allStatuses,\r\n        schedule,\r\n        month,\r\n        year\r\n      );\r\n\r\n      setCalendar(calendarInfo);\r\n    }\r\n  }, [daystatus, month, year, allStatuses, schedule]);\r\n\r\n  useEffect(() => {\r\n    if (count < max) {\r\n      setIsDisableNext(false);\r\n    }\r\n    if (count > min) {\r\n      setIsDisableBack(false);\r\n    }\r\n  }, [count]);\r\n\r\n  const handleBackMonth = () => {\r\n    const newCount = count - 1;\r\n    if (newCount < min) {\r\n      setIsDisableBack(true);\r\n    } else {\r\n      let m = month - 1;\r\n      let y = year;\r\n      y = m < 0 ? year - 1 : year;\r\n      m = m < 0 ? 11 : m;\r\n      setYear(y);\r\n      setMonth(m);\r\n      setCount(newCount);\r\n    }\r\n  };\r\n\r\n  const handleNextMonth = () => {\r\n    const newCount = count + 1;\r\n    if (newCount > max) {\r\n      setIsDisableNext(true);\r\n    } else {\r\n      let m = month + 1;\r\n      let y = year;\r\n      y = m > 11 ? year + 1 : year;\r\n      m = m > 11 ? 0 : m;\r\n      setYear(y);\r\n      setMonth(m);\r\n      setCount(newCount);\r\n    }\r\n  };\r\n\r\n  const handleSelected = (selected, year, month, day) => {\r\n    const agenda = calendar;\r\n    calendar.map((weeks, wIndex) => {\r\n      weeks.map((item, dIndex) => {\r\n        agenda[wIndex][dIndex].selected = false;\r\n        if (item.day === day) agenda[wIndex][dIndex].selected = selected;\r\n      });\r\n    });\r\n    setCalendar([...agenda]);\r\n    viewDetailByClick(year, month, day);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent\r\n        sx={{\r\n          [theme.breakpoints.down('md')]: { padding: theme.spacing(3, 0.2) }\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <IconButton\r\n            disabled={isDisableBack}\r\n            aria-label=\"delete\"\r\n            onClick={handleBackMonth}\r\n          >\r\n            <ArrowBackIosIcon fontSize=\"medium\" />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h5\"\r\n            sx={{ display: 'flex', alignItems: 'center' }}\r\n          >\r\n            {getMonthNamebyNumber(month)} {year}\r\n          </Typography>\r\n          <IconButton\r\n            disabled={isDisableNext}\r\n            aria-label=\"delete\"\r\n            onClick={handleNextMonth}\r\n          >\r\n            <ArrowForwardIosIcon fontSize=\"medium\" />\r\n          </IconButton>\r\n        </Box>\r\n        <Box m={3} />\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <GridContainer spacing={3}>\r\n            {Weeks.map((week, index) => (\r\n              <GridItem key={index}>\r\n                <Typography variant=\"caption\">{week}</Typography>\r\n              </GridItem>\r\n            ))}\r\n          </GridContainer>\r\n        </Box>\r\n        <Box m={4} />\r\n        <Box sx={{ width: '100%', textAlign: 'center' }}>\r\n          {calendar.map((weeks, wIndex) => (\r\n            <GridContainer spacing={3} key={wIndex} sx={{ mb: 1 }}>\r\n              {weeks.map((day, dIndex) => (\r\n                <GridItem key={dIndex}>\r\n                  {day.day > 0 && (\r\n                    <DayScheduleButton\r\n                      year={day.year}\r\n                      month={day.month}\r\n                      day={day.day}\r\n                      officeFilterId={officeFilterId}\r\n                      officeInfo={day.officeInfo}\r\n                      icon={day.icon}\r\n                      halfday={day.halfday}\r\n                      Selection={handleSelected}\r\n                      isSelected={day.selected}\r\n                    />\r\n                  )}\r\n                </GridItem>\r\n              ))}\r\n            </GridContainer>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n// material\nimport {\n  useTheme,\n  experimentalStyled as styled\n} from '@material-ui/core/styles';\nimport { Box, Drawer, Typography } from '@material-ui/core';\n// components\nimport Scrollbar from '../Scrollbar';\n//\nimport SelfSettingButton from '../dashboard-component/SelftSettingButton';\nimport UserScheduleStatus from '../dashboard-component/UserScheduleStatus';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 480;\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  [theme.breakpoints.up(1400)]: {\n    flexShrink: 0,\n    width: DRAWER_WIDTH\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nRightSideBar.propTypes = {\n  todayTitle: PropTypes.string,\n  daystatus: PropTypes.array,\n  schedule: PropTypes.array,\n  iconProps: PropTypes.func,\n  cToday: PropTypes.object,\n  notStatusUsers: PropTypes.array,\n  scheduleUsers: PropTypes.array,\n  isOpenSidebar: PropTypes.bool,\n  onCloseSidebar: PropTypes.func\n};\n\nexport default function RightSideBar({\n  todayTitle,\n  daystatus,\n  schedule,\n  iconProps,\n  cToday,\n  notStatusUsers,\n  scheduleUsers,\n  isOpenSidebar,\n  onCloseSidebar\n}) {\n  const { pathname } = useLocation();\n  const theme = useTheme();\n\n  const [icon, setIcon] = useState('');\n  const [isHalf, setIsHalf] = useState(false);\n  const [isWork, setIsWork] = useState(false);\n  const [detail, setDetail] = useState({});\n  const [weekTitle, setWeekTitle] = useState('');\n  const [notStatusYet, setNotStatusYet] = useState(false);\n  const [sTitle, setTitle] = useState('');\n\n  useEffect(() => {\n    if (isOpenSidebar && onCloseSidebar) {\n      onCloseSidebar();\n    }\n  }, [isOpenSidebar, onCloseSidebar, pathname]);\n\n  useEffect(() => {\n    if (daystatus.length > 0 && schedule.length > 0) {\n      daystatus.map((months, mIndex) => {\n        months.map((day, dIndex) => {\n          if (mIndex === cToday.month && dIndex === cToday.day - 1) {\n            setIcon(day.icon);\n            setIsHalf(day.halfday);\n            setIsWork(day.work);\n            setWeekTitle(day.weekTitle);\n            const detailInfo = {\n              morning: {\n                id: day.detail.morning.id,\n                type: day.detail.morning.type\n              },\n              afternoon: {\n                id: day.detail.afternoon.id,\n                type: day.detail.afternoon.type\n              }\n            };\n            setDetail(detailInfo);\n            let notStatus = true;\n            schedule.map((sche) => {\n              if (\n                sche.id === day.detail.morning.id &&\n                sche.type === day.detail.morning.type\n              ) {\n                notStatus = false;\n                setTitle(sche.title);\n              }\n            });\n            setNotStatusYet(notStatus);\n          }\n        });\n      });\n    }\n  }, [daystatus, schedule, cToday]);\n\n  const changeIcon = (icon1, icon2, detail1, detail2, status) => {\n    iconProps(icon1, icon2, detail1, detail2, status, cToday.month, cToday.day);\n  };\n\n  const renderContent = (\n    <Scrollbar>\n      <Box sx={{ px: 2.5, py: 3, mt: 10 }}>\n        <Typography\n          variant=\"h4\"\n          sx={{ color: 'text.primary', textAlign: 'center' }}\n        >\n          {todayTitle}\n        </Typography>\n        <SelfSettingButton\n          schedule={schedule}\n          icon={icon}\n          halfday={isHalf}\n          work={isWork}\n          detailInfo={detail}\n          weekTitle={weekTitle}\n          iconProps={changeIcon}\n          statusTitle={sTitle}\n          notStatus={notStatusYet}\n        />\n        <Box m={5} />\n        <UserScheduleStatus\n          notStatusUsers={notStatusUsers}\n          scheduleUsers={scheduleUsers}\n        />\n      </Box>\n    </Scrollbar>\n  );\n\n  return (\n    <RootStyle>\n      <Box sx={{ [theme.breakpoints.down(1400)]: { display: 'none' } }}>\n        <Drawer\n          open\n          anchor=\"right\"\n          variant=\"persistent\"\n          PaperProps={{\n            sx: { width: DRAWER_WIDTH }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </Box>\n    </RootStyle>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable radix */\r\n/* eslint-disable array-callback-return */\r\nimport React, { useState, useEffect } from 'react';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Container, Box } from '@material-ui/core';\r\n// ----------------------------------------------------------------------\r\n// hooks\r\nimport useGeneral from '../../hooks/useGeneral';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport {\r\n  getCalendar,\r\n  getAllStatusById,\r\n  getUsersByCompany\r\n} from '../../redux/slices/general';\r\nimport {\r\n  getOfficeList,\r\n  getTeamList,\r\n  getOrganizations\r\n} from '../../redux/slices/adminSetting';\r\n\r\nimport CalendarCard from './CalendarCard';\r\nimport DayStatusButtonGroup from '../dashboard-component/DayStatusButtonGroup';\r\nimport TeamCategoryGroup from '../dashboard-component/TeamCategoryGroup';\r\n\r\nimport RightSideBar from './RightSideBar';\r\n\r\nexport default function CalendarContent() {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const { updateSchedule } = useGeneral();\r\n  const { officeList, teamList } = useSelector((state) => state.adminSetting);\r\n  const { calendar, allStatus, allUsers } = useSelector(\r\n    (state) => state.general\r\n  );\r\n  const { organizations } = useSelector((state) => state.adminSetting);\r\n\r\n  const [teams, setTeams] = useState([]);\r\n  const [teamIds, setTeamIds] = useState([]);\r\n\r\n  const [offices, setOffices] = useState([]);\r\n  const [officeIds, setOfficeIds] = useState(initialStatus);\r\n\r\n  const [calendarProps, setCalendarProps] = useState([]);\r\n\r\n  const [todayTitle, setTodayTitle] = useState('');\r\n\r\n  // calendar setting\r\n  const [cToday, setCToday] = useState({});\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [allStatuses, setAllStatuses] = useState([]);\r\n  const [allMembers, setAllMembers] = useState([]);\r\n\r\n  // right side bar user setting\r\n  const [scheduleUsers, setScheduleUsers] = useState([]);\r\n  const [notStatusUsers, setNotStatusUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCalendar());\r\n    dispatch(getOfficeList());\r\n    dispatch(getTeamList());\r\n    dispatch(getOrganizations());\r\n    dispatch(getAllStatusById());\r\n    dispatch(getUsersByCompany());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (allStatus.length > 0) {\r\n      setAllStatuses(allStatus);\r\n    }\r\n  }, [allStatus]);\r\n\r\n  useEffect(() => {\r\n    if (allUsers.length > 0) {\r\n      setAllMembers(allUsers);\r\n    }\r\n  }, [allUsers]);\r\n\r\n  useEffect(() => {\r\n    const curr = new Date();\r\n    const today = {\r\n      year: curr.getFullYear(),\r\n      month: curr.getMonth(),\r\n      day: curr.getDate()\r\n    };\r\n\r\n    const dayOfweek =\r\n      WeekListTitles[curr.getDay() - 1 < 0 ? 6 : curr.getDay() - 1];\r\n    const tmpMonth = Months[curr.getMonth()];\r\n    const tmpYear = curr.getFullYear();\r\n    const tmpTodaytitle = `${dayOfweek} ${today.day} ${tmpMonth}. ${tmpYear}`;\r\n\r\n    setTodayTitle(tmpTodaytitle);\r\n\r\n    setCToday(today);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (calendar.length > 0) {\r\n      const yearData = [];\r\n      calendar.map((months, mIndex) => {\r\n        const curr = new Date();\r\n        curr.setMonth(mIndex);\r\n        const thisMonth = months;\r\n\r\n        const monthData = [];\r\n\r\n        thisMonth.map((mDay, dIndex) => {\r\n          curr.setDate(dIndex + 1);\r\n          const dayListIndex = curr.getDay() - 1 < 0 ? 6 : curr.getDay() - 1;\r\n          const dayObj = {\r\n            id: dIndex + 1,\r\n            weekTitle: `${WeekListTitles[dayListIndex]} ${\r\n              Months[curr.getMonth()]\r\n            } ${dIndex + 1}`,\r\n            icon: mDay.icon,\r\n            detail: {\r\n              morning: { id: mDay.morning.id, type: mDay.morning.type },\r\n              afternoon: { id: mDay.afternoon.id, type: mDay.afternoon.type }\r\n            },\r\n            halfday: mDay.isHalf,\r\n            work: mDay.isWork\r\n          };\r\n          monthData.push(dayObj);\r\n        });\r\n        yearData.push(monthData);\r\n      });\r\n\r\n      setCalendarProps(yearData);\r\n    }\r\n  }, [calendar]);\r\n\r\n  useEffect(() => {\r\n    const OfficeStatus = [];\r\n    officeList.map((office) => {\r\n      const data = {\r\n        id: office.id,\r\n        label: office.name,\r\n        icon: office.emoji\r\n      };\r\n\r\n      OfficeStatus.push(data);\r\n    });\r\n\r\n    const TeamStatus = [];\r\n    teamList.map((team) => {\r\n      const data = {\r\n        id: team.id,\r\n        label: team.name,\r\n        color: team.color\r\n      };\r\n\r\n      TeamStatus.push(data);\r\n    });\r\n\r\n    setOffices([...OfficeStatus]);\r\n    setTeams([...TeamStatus]);\r\n  }, [officeList, teamList]);\r\n\r\n  useEffect(() => {\r\n    if (organizations.result !== undefined) {\r\n      const { statuses } = organizations.result;\r\n\r\n      const schedules = [];\r\n      const { basicList, customList } = statuses;\r\n      officeList.map((office) => {\r\n        const rowObj = {\r\n          id: office.id,\r\n          type: 'office',\r\n          emoji: office.emoji,\r\n          title: office.name,\r\n          capacity: office.capacity\r\n        };\r\n        schedules.push(rowObj);\r\n      });\r\n\r\n      basicList.map((basic) => {\r\n        if (basic.isActive > 0) {\r\n          const rowObj = {\r\n            id: basic.id,\r\n            type: 'basic',\r\n            emoji: basic.emoji,\r\n            title: basic.title\r\n          };\r\n          schedules.push(rowObj);\r\n        }\r\n      });\r\n\r\n      customList.map((custom) => {\r\n        if (custom.isActive > 0) {\r\n          const rowObj = {\r\n            id: custom.id,\r\n            type: 'custom',\r\n            emoji: custom.emoji,\r\n            title: custom.title\r\n          };\r\n          schedules.push(rowObj);\r\n        }\r\n      });\r\n      setSchedule(schedules);\r\n    }\r\n  }, [organizations, officeList]);\r\n\r\n  useEffect(() => {\r\n    const newData = [];\r\n    allStatuses.map((status) => {\r\n      const dData = status.schedule[cToday.month][cToday.day - 1];\r\n      const rObj = {\r\n        userId: status.userId,\r\n        data: dData\r\n      };\r\n      newData.push(rObj);\r\n    });\r\n\r\n    const schArr = [];\r\n    let notStatus = [];\r\n    schedule.map((sche) => {\r\n      const userArr = [];\r\n      newData.map((user) => {\r\n        if (user.data.isWork) {\r\n          if (user.data.isHalf) {\r\n            if (\r\n              sche.id === user.data.morning.id &&\r\n              sche.type === user.data.morning.type\r\n            ) {\r\n              userArr.push(user.userId);\r\n            } else if (\r\n              sche.id === user.data.afternoon.id &&\r\n              sche.type === user.data.afternoon.type\r\n            ) {\r\n              userArr.push(user.userId);\r\n            }\r\n          } else if (!user.data.isHalf) {\r\n            if (\r\n              sche.id === user.data.morning.id &&\r\n              sche.type === user.data.morning.type\r\n            ) {\r\n              userArr.push(user.userId);\r\n            }\r\n          }\r\n        }\r\n      });\r\n      if (userArr.length > 0) {\r\n        let schObj = {};\r\n        if (sche.type === 'office') {\r\n          const occupancy = (userArr.length / sche.capacity) * 100;\r\n          schObj = {\r\n            emoji: sche.emoji,\r\n            schTitle: sche.title,\r\n            users: userArr,\r\n            type: 'office',\r\n            capacity: sche.capacity,\r\n            occupancy: parseInt(occupancy)\r\n          };\r\n        } else {\r\n          schObj = {\r\n            emoji: sche.emoji,\r\n            schTitle: sche.title,\r\n            users: userArr,\r\n            type: 'status'\r\n          };\r\n        }\r\n        schArr.push(schObj);\r\n      }\r\n    });\r\n\r\n    newData.map((user) => {\r\n      let isSet = false;\r\n      schArr.map((sUser) => {\r\n        for (let i = 0; i < sUser.users.length; i += 1) {\r\n          if (user.userId === sUser.users[i]) {\r\n            isSet = true;\r\n            break;\r\n          }\r\n        }\r\n      });\r\n      if (!isSet) {\r\n        notStatus.push(user.userId);\r\n      }\r\n    });\r\n\r\n    const tmpSchArr = schArr;\r\n    tmpSchArr.map((sche, sIndex) => {\r\n      const updatedUsers = [];\r\n      sche.users.map((userId) => {\r\n        allMembers.map((member) => {\r\n          if (userId === member.id) {\r\n            const userObj = {\r\n              id: userId,\r\n              avatarURL: member.avatarURL,\r\n              name: member.name\r\n            };\r\n            updatedUsers.push(userObj);\r\n          }\r\n        });\r\n      });\r\n      schArr[sIndex].users = updatedUsers;\r\n    });\r\n\r\n    if (notStatus.length > 0) {\r\n      const tmpNotStatus = notStatus;\r\n      const updatedUsers = [];\r\n      tmpNotStatus.map((userId) => {\r\n        allMembers.map((member) => {\r\n          if (userId === member.id) {\r\n            const userObj = {\r\n              id: userId,\r\n              avatarURL: member.avatarURL,\r\n              name: member.name\r\n            };\r\n            updatedUsers.push(userObj);\r\n          }\r\n        });\r\n      });\r\n      notStatus = updatedUsers;\r\n      setNotStatusUsers(notStatus);\r\n    } else {\r\n      setNotStatusUsers([]);\r\n    }\r\n\r\n    setScheduleUsers(schArr);\r\n  }, [allStatuses, cToday, allMembers]);\r\n\r\n  const setStatusProps = (selectedIds) => {\r\n    setOfficeIds(selectedIds);\r\n  };\r\n\r\n  const handleTeamSelected = (teamStatus) => {\r\n    setTeamIds(teamStatus);\r\n  };\r\n\r\n  const handleClickShowDetail = (year, month, day) => {\r\n    dispatch(getAllStatusById());\r\n    const today = {\r\n      year,\r\n      month,\r\n      day\r\n    };\r\n    setCToday(today);\r\n\r\n    const curr = new Date();\r\n    curr.setDate(day);\r\n    const dayOfweek =\r\n      WeekListTitles[curr.getDay() - 1 < 0 ? 6 : curr.getDay() - 1];\r\n    const tmpMonth = Months[curr.getMonth()];\r\n    const tmpYear = curr.getFullYear();\r\n    const tmpTodaytitle = `${dayOfweek} ${day} ${tmpMonth}. ${tmpYear}`;\r\n\r\n    setTodayTitle(tmpTodaytitle);\r\n  };\r\n\r\n  // change icon when set icon in schedule card\r\n  const changeIcon = (icon1, icon2, detail1, detail2, status, month, day) => {\r\n    let emoji1 = '';\r\n    let emoji2 = '';\r\n    let resIcon = '';\r\n    schedule.map((item, i) => {\r\n      if (i === icon1) emoji1 = item.emoji;\r\n      if (i === icon2) emoji2 = item.emoji;\r\n    });\r\n    let dayStatus = status;\r\n    if (icon1 === icon2) dayStatus = false;\r\n    resIcon = dayStatus ? `${emoji1}${emoji2}` : emoji1;\r\n    const CalendarSchedule = calendarProps;\r\n    let settingDay = 0;\r\n    calendarProps.map((months, mIndex) => {\r\n      months.map((schedule, sIndex) => {\r\n        if (mIndex === month && schedule.id === day) {\r\n          CalendarSchedule[mIndex][sIndex].icon = resIcon;\r\n          CalendarSchedule[mIndex][sIndex].halfday = dayStatus;\r\n          CalendarSchedule[mIndex][sIndex].work = true;\r\n          CalendarSchedule[mIndex][sIndex].detail.morning.id = detail1.id;\r\n          CalendarSchedule[mIndex][sIndex].detail.morning.type = detail1.type;\r\n          settingDay = sIndex;\r\n        }\r\n      });\r\n    });\r\n\r\n    const updatedSchedule = {\r\n      month,\r\n      day: settingDay,\r\n      emoji: resIcon,\r\n      morning: detail1,\r\n      afternoon: detail2,\r\n      isHalf: dayStatus,\r\n      isWork: true\r\n    };\r\n\r\n    updateSchedule({ updatedSchedule }).then(() => {\r\n      dispatch(getAllStatusById());\r\n    });\r\n    setCalendarProps([...CalendarSchedule]);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex' }}>\r\n      <Container maxWidth=\"xl\">\r\n        <Container\r\n          maxWidth=\"md\"\r\n          sx={{ [theme.breakpoints.down('md')]: { px: 0 } }}\r\n        >\r\n          <DayStatusButtonGroup\r\n            officeInitProps={officeIds}\r\n            statusProps={setStatusProps}\r\n            officeGroups={offices}\r\n            isMulti={false}\r\n          />\r\n          <TeamCategoryGroup\r\n            teamInitProps={teamIds}\r\n            daygroups={teams}\r\n            teamStatusProps={handleTeamSelected}\r\n          />\r\n          <CalendarCard\r\n            officeFilterId={officeIds[0]}\r\n            allStatuses={allStatuses}\r\n            schedule={schedule}\r\n            daystatus={calendarProps}\r\n            viewDetailByClick={handleClickShowDetail}\r\n          />\r\n        </Container>\r\n      </Container>\r\n      <RightSideBar\r\n        todayTitle={todayTitle}\r\n        daystatus={calendarProps}\r\n        schedule={schedule}\r\n        iconProps={changeIcon}\r\n        cToday={cToday}\r\n        scheduleUsers={scheduleUsers}\r\n        notStatusUsers={notStatusUsers}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst initialStatus = [1];\r\nconst WeekListTitles = [\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n  'Sunday'\r\n];\r\n\r\nconst Months = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Set',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec'\r\n];\r\n","// components\nimport Page from '../components/Page';\n\nimport { CalendarContent } from '../components/dashboard-calendar';\n\n// ----------------------------------------------------------------------\n\nexport default function CalendarPage() {\n  return (\n    <Page title=\"Thimble | Calendar\">\n      <CalendarContent />\n    </Page>\n  );\n}\n"],"sourceRoot":""}