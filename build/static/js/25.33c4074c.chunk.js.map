{"version":3,"sources":["components/Page.js","hooks/useAdmin.js","components/dashboard-component/TeamCategoryGroup.js","components/HeaderDashboard.js","components/dashboard-component/EmojiAPI.js","components/dashboard-component/EmojiButton.js","components/dashboard-organization/AlertTrialCard.js","components/dashboard-organization/CompanyCard.js","components/dashboard-organization/CalendarCard.js","components/dashboard-organization/FeaturesCard.js","components/dashboard-organization/IntegrationCard.js","components/dashboard-organization/StatusesCard.js","components/dashboard-organization/SaveChanges.js","components/dashboard-organization/OrganizationContent.js","views/DashboardOrganizationPage.js"],"names":["Page","forwardRef","children","title","other","ref","propTypes","PropTypes","node","isRequired","string","useUserManage","dispatch","useDispatch","updateProfile","email","firstname","lastname","photoURL","roles","officeId","teamId","updateOrganizations","updatedOrg","updateOfficeList","updatedOfficeList","updateTeamList","updatedTeamList","deleteOffice","deleteTeam","addOffice","addStatus","addTeam","StyledToggleButtonGroup","withStyles","theme","grouped","marginRight","spacing","marginBottom","ToggleButtonGroup","TeamCategoryGroup","daygroups","teamInitProps","teamStatusProps","sx","useTheme","categories","setCategories","React","useState","useEffect","value","onChange","event","newCategories","aria-label","display","textAlign","mb","map","item","id","borderColor","color","borderRadius","borderLeft","backgroundColor","variant","fontWeight","label","HeaderDashboard","links","action","heading","moreLink","alignItems","flexGrow","gutterBottom","flexShrink","mt","isString","href","target","noWrap","EmojiAPI","updateIcon","chosenEmoji","setChosenEmoji","onEmojiClick","emojiObject","console","log","emoji","PopoverStyle","paper","Popover","EmojiButton","icon","changeIconProps","index","anchorEl","setAnchorEl","handleClose","open","Boolean","undefined","Box","width","mr","breakpoints","up","Button","onClick","currentTarget","border","padding","position","down","minWidth","role","fontSize","component","src","height","right","bottom","onClose","anchorOrigin","vertical","horizontal","transformOrigin","YellowBadge","styled","GreyBadge","RedBadge","AlertTrialCard","Card","CardContent","justifyContent","Typography","m","CompanyCard","dataProps","setCompanyProps","name","setName","domain","setDomain","isEmail","setIsEmail","isGoogleSignIn","setIsGoogleSignIn","cData","tempCompany","CardHeader","subheader","Grid","container","xs","TextField","e","disabled","FormGroup","FormControlLabel","control","Checkbox","checked","CalendarCard","setCalendarProps","workDays","setWorkDays","startingDay","setStartingDay","monthRange","setMonthRange","tempCalendar","Number","lg","md","sm","py","FormControl","InputLabel","Select","labelId","WeekDays","day","MenuItem","days","selectedItems","type","InputLabelProps","shrink","ml","ScheduleDivider","zIndex","transform","FeaturesCard","setFeatureProps","isHalfDays","setIsHalfDays","isCities","setIsCities","fData","tempFeature","inputProps","maxHeight","px","style","IntegrationCard","startIcon","createData","description","isActive","customData","basicList","customList","StatusesCard","setStatusProps","basics","setBasics","customs","setCustoms","useAdmin","sData","basic","custom","tempStatuses","changeIcon","values","insData","iconIndex","push","changeIconCustom","tmpBasics","bIndex","Checked","tmpCustoms","async","length","FootBarForSave","left","marginLeft","SaveChange","setCancelProps","saveDataProps","enqueueSnackbar","useSnackbar","isSubmitting","setIsSubmitting","saveData","setSaveData","Container","maxWidth","Paper","boxShadow","LoadingButton","pending","OrganizationContent","organizations","useSelector","state","adminSetting","organization","setOrganization","company","setCompany","calendar","setCalendar","features","setFeatures","statuses","setStatuses","isSave","setIsSave","getOrganizations","result","companySetting","calendarSetting","featuresSetting","statusSetting","isCancel","OrganizationPage","PATH_DASHBOARD","general","home"],"mappings":"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","file":"static/js/25.33c4074c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// material\nimport { Box } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { useDispatch } from 'react-redux';\n// redux\nimport {\n  addOffice,\n  deleteOffice,\n  updateOfficeList,\n  // team\n  addTeam,\n  deleteTeam,\n  updateTeamList,\n  // Organization\n  updateOrganizations,\n  addStatus\n} from '../redux/slices/adminSetting';\nimport { updateProfile } from '../redux/slices/user';\n\n// ----------------------------------------------------------------------\n\nexport default function useUserManage() {\n  // JWT Auth\n  const dispatch = useDispatch();\n\n  return {\n    updateProfile: ({\n      email,\n      firstname,\n      lastname,\n      photoURL,\n      roles,\n      officeId,\n      teamId\n    }) =>\n      dispatch(\n        updateProfile({\n          email,\n          firstname,\n          lastname,\n          photoURL,\n          roles,\n          officeId,\n          teamId\n        })\n      ),\n\n    // -------------- Update list ---------------------\n    updateOrganizations: ({ updatedOrg }) =>\n      dispatch(updateOrganizations({ updatedOrg })),\n\n    // -------------- Update list ---------------------\n    updateOfficeList: ({ updatedOfficeList }) =>\n      dispatch(updateOfficeList({ updatedOfficeList })),\n\n    updateTeamList: ({ updatedTeamList }) =>\n      dispatch(updateTeamList({ updatedTeamList })),\n    // -------------- Deleting the data---------------------\n\n    deleteOffice: ({ officeId }) => dispatch(deleteOffice({ officeId })),\n    deleteTeam: ({ teamId }) => dispatch(deleteTeam({ teamId })),\n\n    // -------------- Adding the data ---------------------\n\n    addOffice: () => dispatch(addOffice()),\n    addStatus: () => dispatch(addStatus()), // in Organization\n    addTeam: () => dispatch(addTeam())\n  };\n}\n","import PropTypes from 'prop-types';\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { withStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Typography, ToggleButtonGroup, ToggleButton } from '@material-ui/core';\r\n\r\nTeamCategoryGroup.propTypes = {\r\n  daygroups: PropTypes.array,\r\n  teamInitProps: PropTypes.array,\r\n  teamStatusProps: PropTypes.func,\r\n  sx: PropTypes.object\r\n};\r\n\r\nconst StyledToggleButtonGroup = withStyles((theme) => ({\r\n  grouped: {\r\n    marginRight: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}))(ToggleButtonGroup);\r\n\r\nexport default function TeamCategoryGroup({\r\n  daygroups,\r\n  teamInitProps,\r\n  teamStatusProps,\r\n  sx\r\n}) {\r\n  const theme = useTheme();\r\n\r\n  const [categories, setCategories] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    setCategories(teamInitProps);\r\n  }, [teamInitProps]);\r\n\r\n  const handleCategories = (event, newCategories) => {\r\n    teamStatusProps(newCategories);\r\n    setCategories(newCategories);\r\n  };\r\n\r\n  return (\r\n    <StyledToggleButtonGroup\r\n      value={categories}\r\n      onChange={handleCategories}\r\n      aria-label=\"team category\"\r\n      sx={{ display: 'block', textAlign: 'center', mb: 3, ...sx }}\r\n    >\r\n      {daygroups.map((item) => (\r\n        <ToggleButton\r\n          key={item.id}\r\n          value={item.id}\r\n          sx={{\r\n            borderColor: item.color,\r\n            borderRadius: `${theme.spacing(3)} !important`,\r\n            color: item.color,\r\n            borderLeft: `1px solid ${item.color} !important`,\r\n            '&.Mui-selected': {\r\n              color: 'white',\r\n              backgroundColor: item.color\r\n            },\r\n            '&.Mui-selected:hover': {\r\n              backgroundColor: item.color\r\n            },\r\n            ...sx\r\n          }}\r\n        >\r\n          <Typography variant=\"body2\" sx={{ fontWeight: 700 }}>\r\n            {item.label}\r\n          </Typography>\r\n        </ToggleButton>\r\n      ))}\r\n    </StyledToggleButtonGroup>\r\n  );\r\n}\r\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderDashboard.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderDashboard({\n  links,\n  action,\n  heading,\n  moreLink = '' || [],\n  sx,\n  ...other\n}) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\r\n\r\nimport React, { useState } from 'react';\r\nimport Picker from 'emoji-picker-react';\r\n\r\nEmojiAPI.propTypes = {\r\n  updateIcon: PropTypes.func\r\n};\r\n\r\nexport default function EmojiAPI({ updateIcon }) {\r\n  const [chosenEmoji, setChosenEmoji] = useState(null);\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    console.log(emojiObject.emoji, chosenEmoji);\r\n    setChosenEmoji(emojiObject);\r\n    updateIcon(emojiObject.emoji);\r\n  };\r\n\r\n  return <Picker onEmojiClick={onEmojiClick} />;\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\nimport { withStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Button, Popover, Box } from '@material-ui/core';\r\n\r\nimport EmojiContent from './EmojiAPI';\r\n\r\nconst PopoverStyle = withStyles(() => ({\r\n  paper: {\r\n    borderRadius: 24\r\n  }\r\n}))(Popover);\r\n\r\nEmojiButton.propTypes = {\r\n  icon: PropTypes.string,\r\n  changeIconProps: PropTypes.func,\r\n  index: PropTypes.number\r\n};\r\n\r\nexport default function EmojiButton({ icon, changeIconProps, index }) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const uploadIconFromContent = (icon) => {\r\n    handleClose();\r\n    changeIconProps(icon, index);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n  const theme = useTheme();\r\n  return (\r\n    <div>\r\n      <Box sx={{ width: 64, mr: 0, [theme.breakpoints.up('md')]: { mr: 1 } }}>\r\n        <Button\r\n          onClick={handleClick}\r\n          sx={{\r\n            border: '1px solid #E7ECF5',\r\n            borderRadius: '40%',\r\n            padding: theme.spacing(1, 0),\r\n            position: 'relative',\r\n            [theme.breakpoints.down('md')]: {\r\n              minWidth: '0px',\r\n              width: '50px'\r\n            }\r\n          }}\r\n        >\r\n          <Box\r\n            role=\"img\"\r\n            aria-label=\"Panda\"\r\n            sx={{\r\n              fontSize: '22px',\r\n              [theme.breakpoints.up('md')]: { fontSize: '28px' }\r\n            }}\r\n          >\r\n            {icon}\r\n          </Box>\r\n          <Box\r\n            component=\"img\"\r\n            src=\"/static/dashboard/home/edit.svg\"\r\n            sx={{\r\n              width: 20,\r\n              height: 20,\r\n              position: 'absolute',\r\n              right: 0,\r\n              bottom: 0,\r\n              backgroundColor: '#2E2836',\r\n              borderRadius: '10px',\r\n              padding: '3px'\r\n            }}\r\n          />\r\n        </Button>\r\n      </Box>\r\n      <PopoverStyle\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center'\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center'\r\n        }}\r\n      >\r\n        <EmojiContent updateIcon={uploadIconFromContent} />\r\n      </PopoverStyle>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\n\r\nimport { Card, CardContent, Typography, Box } from '@material-ui/core';\r\n\r\nconst YellowBadge = styled('div')(({ theme }) => ({\r\n  backgroundColor: '#FAF6D0',\r\n  borderRadius: '20px',\r\n  padding: theme.spacing(0.5, 2),\r\n  fontWeight: 800,\r\n  fontSize: 13\r\n}));\r\n\r\nconst GreyBadge = styled('div')(({ theme }) => ({\r\n  backgroundColor: '#DCE7FB',\r\n  borderRadius: '20px',\r\n  padding: theme.spacing(0.5, 2),\r\n  fontWeight: 800,\r\n  fontSize: 13\r\n}));\r\n\r\nconst RedBadge = styled('div')(({ theme }) => ({\r\n  backgroundColor: '#FF5050',\r\n  borderRadius: '20px',\r\n  padding: theme.spacing(0.5, 2),\r\n  fontWeight: 800,\r\n  fontSize: 13,\r\n  color: 'white'\r\n}));\r\n\r\nexport default function AlertTrialCard() {\r\n  const theme = useTheme();\r\n  return (\r\n    <Card>\r\n      <CardContent\r\n        sx={{\r\n          [theme.breakpoints.down('sm')]: { padding: theme.spacing(2.5, 0) }\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            padding: theme.spacing(2),\r\n            [theme.breakpoints.down('sm')]: {\r\n              display: 'block',\r\n              textAlign: 'center'\r\n            }\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              [theme.breakpoints.down('sm')]: {\r\n                mb: 1,\r\n                display: 'block'\r\n              }\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" sx={{ mr: 1 }}>\r\n              Subscription\r\n            </Typography>\r\n            <YellowBadge>TRIAL</YellowBadge>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              [theme.breakpoints.down('sm')]: {\r\n                display: 'block',\r\n                mb: 1\r\n              }\r\n            }}\r\n          >\r\n            <Typography>ends on</Typography>\r\n            <Box m={1} />\r\n            <GreyBadge>July 5, 2021</GreyBadge>\r\n            <Box m={1} />\r\n            <RedBadge>10 Days Left</RedBadge>\r\n          </Box>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\n\r\nCompanyCard.propTypes = {\r\n  dataProps: PropTypes.object,\r\n  setCompanyProps: PropTypes.func\r\n};\r\n\r\nexport default function CompanyCard({ dataProps, setCompanyProps }) {\r\n  const [name, setName] = useState('');\r\n  const [domain, setDomain] = useState('');\r\n  const [isEmail, setIsEmail] = useState(0);\r\n  const [isGoogleSignIn, setIsGoogleSignIn] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const cData = dataProps;\r\n    setName(cData.name);\r\n    setDomain(cData.domain);\r\n    setIsEmail(cData.isEmail);\r\n    setIsGoogleSignIn(cData.isGoogleSignIn);\r\n  }, [dataProps]);\r\n\r\n  useEffect(() => {\r\n    const tempCompany = {};\r\n    tempCompany.name = name;\r\n    tempCompany.domain = domain;\r\n    tempCompany.isEmail = isEmail;\r\n    tempCompany.isGoogleSignIn = isGoogleSignIn;\r\n    setCompanyProps(tempCompany);\r\n  }, [domain, isEmail, isGoogleSignIn, name]);\r\n\r\n  const handleChangeIsEmail = () => {\r\n    setIsEmail(isEmail === 1 ? 0 : 1);\r\n  };\r\n\r\n  const handleChangeIsGoogleSignIn = () => {\r\n    setIsGoogleSignIn(isGoogleSignIn === 1 ? 0 : 1);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader subheader=\"COMPANY\" />\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle1\"> Company Name </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Company Name\"\r\n              variant=\"outlined\"\r\n              onChange={handleNameChange}\r\n              value={name || ''}\r\n              sx={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle1\"> Approved Domains </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\">\r\n              Users can sign up with email from these domains:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label={domain}\r\n              disabled\r\n              variant=\"outlined\"\r\n              sx={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle1\"> Allowed providers </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\">\r\n              Users can sign up from these providers:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={isEmail === 1}\r\n                    onChange={handleChangeIsEmail}\r\n                    name=\"email+password\"\r\n                  />\r\n                }\r\n                label=\"Email + Password\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={isGoogleSignIn === 1}\r\n                    onChange={handleChangeIsGoogleSignIn}\r\n                    name=\"googleSignIn\"\r\n                  />\r\n                }\r\n                label=\"Google Sign In (G Suite)\"\r\n              />\r\n              <FormControlLabel\r\n                disabled\r\n                control={<Checkbox name=\"azure\" />}\r\n                label=\"Microsoft Azure AD*\"\r\n              />\r\n              <FormControlLabel\r\n                disabled\r\n                control={<Checkbox name=\"okata\" />}\r\n                label=\"Okta*\"\r\n              />\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item xs={12} sx={{ textAlign: 'center' }}>\r\n            <Typography variant=\"caption\">*coming soon</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Grid,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  InputLabel\r\n} from '@material-ui/core';\r\n\r\nimport DayGroup from '../dashboard-component/TeamCategoryGroup';\r\n\r\nCalendarCard.propTypes = {\r\n  dataProps: PropTypes.object,\r\n  setCalendarProps: PropTypes.func\r\n};\r\n\r\nexport default function CalendarCard({ dataProps, setCalendarProps }) {\r\n  const [workDays, setWorkDays] = useState([]);\r\n  const [startingDay, setStartingDay] = useState(0);\r\n  const [monthRange, setMonthRange] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const cData = dataProps;\r\n    setWorkDays(cData.workDays);\r\n    setStartingDay(cData.startingDay);\r\n    setMonthRange(cData.monthRange);\r\n  }, [dataProps]);\r\n\r\n  useEffect(() => {\r\n    const tempCalendar = {};\r\n    tempCalendar.startingDay = startingDay;\r\n    tempCalendar.monthRange = Number(monthRange);\r\n    tempCalendar.workDays = workDays;\r\n    setCalendarProps(tempCalendar);\r\n  }, [monthRange, startingDay, workDays]);\r\n\r\n  const handleSelectedDays = (selectedItems) => {\r\n    setWorkDays(selectedItems);\r\n  };\r\n\r\n  const handleChangeStartingDay = (e) => {\r\n    setStartingDay(e.target.value);\r\n  };\r\n\r\n  const handleChangeMonthRange = (e) => {\r\n    setMonthRange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader subheader=\"CALENDAR\" />\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle1\"> First day of the week </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item lg={4} md={12} sm={12} xs={12}>\r\n                <Typography variant=\"body1\" sx={{ py: 1 }}>\r\n                  You start to work on\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item lg={8} md={12} sm={12} xs={12}>\r\n                <FormControl variant=\"outlined\" sx={{ width: '100%' }}>\r\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                    Week of day\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={startingDay || 0}\r\n                    onChange={handleChangeStartingDay}\r\n                    label=\"Week of day\"\r\n                  >\r\n                    {WeekDays.map((day, index) => (\r\n                      <MenuItem key={index} value={index}>\r\n                        {day}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle1\"> Working days </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\">\r\n              Other days will still be available but in a more discrete way. 98%\r\n              of the time it’s weekends.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <DayGroup\r\n              daygroups={days}\r\n              teamInitProps={workDays}\r\n              teamStatusProps={handleSelectedDays}\r\n              sx={{ minWidth: 40 }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle1\"> Range </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\">\r\n              How many months in advance people can set their status:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box sx={{ display: 'flex' }}>\r\n              <TextField\r\n                id=\"filled-number\"\r\n                label=\"Months\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                variant=\"outlined\"\r\n                value={monthRange || ''}\r\n                onChange={handleChangeMonthRange}\r\n              />\r\n              <Typography variant=\"body1\" sx={{ py: 2, ml: 2 }}>\r\n                month(s)\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst WeekDays = [\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n  'Sunday'\r\n];\r\n\r\nconst days = [\r\n  {\r\n    id: 1,\r\n    label: 'M',\r\n    color: '#00AB55'\r\n  },\r\n  {\r\n    id: 2,\r\n    label: 'T',\r\n    color: '#00AB55'\r\n  },\r\n  {\r\n    id: 3,\r\n    label: 'W',\r\n    color: '#00AB55'\r\n  },\r\n  {\r\n    id: 4,\r\n    label: 'T',\r\n    color: '#00AB55'\r\n  },\r\n  {\r\n    id: 5,\r\n    label: 'F',\r\n    color: '#00AB55'\r\n  },\r\n  {\r\n    id: 6,\r\n    label: 'S',\r\n    color: '#00AB55'\r\n  },\r\n  {\r\n    id: 7,\r\n    label: 'S',\r\n    color: '#00AB55'\r\n  }\r\n];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Checkbox\r\n} from '@material-ui/core';\r\n\r\nconst ScheduleDivider = styled('div')(() => ({\r\n  position: 'absolute',\r\n  zIndex: 10,\r\n  width: '2px',\r\n  height: '40px',\r\n  borderRadius: '8px',\r\n  backgroundColor: '#e7ecf5',\r\n  transform: 'rotate(15deg)'\r\n}));\r\n\r\nFeaturesCard.propTypes = {\r\n  dataProps: PropTypes.object,\r\n  setFeatureProps: PropTypes.func\r\n};\r\n\r\nexport default function FeaturesCard({ dataProps, setFeatureProps }) {\r\n  const theme = useTheme();\r\n\r\n  const [isHalfDays, setIsHalfDays] = useState(0);\r\n  const [isCities, setIsCities] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fData = dataProps;\r\n    setIsHalfDays(fData.isHalfDays);\r\n    setIsCities(fData.isCities);\r\n  }, [dataProps]);\r\n\r\n  useEffect(() => {\r\n    const tempFeature = {};\r\n    tempFeature.isHalfDays = isHalfDays;\r\n    tempFeature.isCities = isCities;\r\n    setFeatureProps(tempFeature);\r\n  }, [isHalfDays, isCities]);\r\n\r\n  const handleChangeIsHalfDays = () => {\r\n    setIsHalfDays(isHalfDays === 1 ? 0 : 1);\r\n  };\r\n\r\n  const handleChangeIsCities = () => {\r\n    setIsCities(isCities === 1 ? 0 : 1);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader subheader=\"FEATURES\" />\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <Typography variant=\"h5\">Half days</Typography>\r\n              <Checkbox\r\n                checked={isHalfDays === 1}\r\n                onChange={handleChangeIsHalfDays}\r\n                color=\"primary\"\r\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n              />\r\n            </Box>\r\n            <Box sx={{ display: 'flex' }}>\r\n              <Box\r\n                sx={{\r\n                  backgroundColor: '#FCEEE2',\r\n                  padding: theme.spacing(2, 3),\r\n                  borderRadius: theme.spacing(2),\r\n                  maxHeight: 90\r\n                }}\r\n              >\r\n                <Button\r\n                  disabled\r\n                  sx={{\r\n                    backgroundColor: 'white',\r\n                    border: '1px solid #E7ECF5',\r\n                    borderRadius: '40%',\r\n                    padding: theme.spacing(1.7, 0),\r\n                    position: 'relative',\r\n                    [theme.breakpoints.down('md')]: {\r\n                      minWidth: '0px',\r\n                      width: '63px'\r\n                    }\r\n                  }}\r\n                >\r\n                  <Box\r\n                    role=\"img\"\r\n                    aria-label=\"Panda\"\r\n                    sx={{\r\n                      fontSize: 15,\r\n                      [theme.breakpoints.up('md')]: { fontSize: '20px' }\r\n                    }}\r\n                  >\r\n                    <span role=\"img\" aria-label=\"Panda\">\r\n                      🤒🏠\r\n                    </span>\r\n                  </Box>\r\n                  <ScheduleDivider />\r\n                </Button>\r\n              </Box>\r\n              <Typography\r\n                variant=\"body1\"\r\n                sx={{ ml: 2, display: 'flex', alignItems: 'center' }}\r\n              >\r\n                Users can set a different status for the morning and the\r\n                afternoon.\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Box m={2} />\r\n          <Grid item xs={12}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <Typography variant=\"h5\">Cities (working remotely)</Typography>\r\n              <Checkbox\r\n                checked={isCities === 1}\r\n                onChange={handleChangeIsCities}\r\n                color=\"primary\"\r\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n              />\r\n            </Box>\r\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n              <Box\r\n                sx={{\r\n                  backgroundColor: '#E4DDFD',\r\n                  padding: theme.spacing(3.5, 1),\r\n                  borderRadius: theme.spacing(2),\r\n                  maxHeight: 90\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    width: 100,\r\n                    fontWeight: 900,\r\n                    backgroundColor: 'white',\r\n                    px: 2,\r\n                    py: 1,\r\n                    borderRadius: theme.spacing(1)\r\n                  }}\r\n                >\r\n                  <span role=\"img\" aria-label=\"Panda\" style={{ fontSize: 14 }}>\r\n                    📍 London\r\n                  </span>\r\n                </Box>\r\n              </Box>\r\n              <Typography\r\n                variant=\"body1\"\r\n                sx={{ ml: 2, display: 'flex', alignItems: 'center' }}\r\n              >\r\n                Users can set specific city to help their colleague know where\r\n                they’re working remotely from.\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React from 'react';\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Grid\r\n} from '@material-ui/core';\r\n\r\nexport default function IntegrationCard() {\r\n  const theme = useTheme();\r\n  return (\r\n    <Card>\r\n      <CardHeader subheader=\"INTEGRATION\" />\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Box sx={{ display: 'flex' }}>\r\n              <Box\r\n                component=\"img\"\r\n                src=\"/static/dashboard/home/slack.svg\"\r\n                sx={{\r\n                  width: theme.spacing(8),\r\n                  height: theme.spacing(8),\r\n                  marginRight: theme.spacing(3)\r\n                }}\r\n              />\r\n              <Box sx={{ textAlign: 'left', mt: 1 }}>\r\n                <Typography variant=\"h5\">Synchronize slack</Typography>\r\n                <Typography variant=\"body1\">\r\n                  Your status will always be up-to-date!\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n          <Box m={2} />\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle1\"> HRIS </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\">\r\n              Get your employees holidays directly synced in Café! We won't edit\r\n              any data in your HRIS 🙏\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                sx={{ mr: 3 }}\r\n                startIcon={\r\n                  <Box\r\n                    component=\"img\"\r\n                    src=\"/static/dashboard/home/payfit.svg\"\r\n                  />\r\n                }\r\n              >\r\n                Payfit\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                startIcon={\r\n                  <Box component=\"img\" src=\"/static/dashboard/home/lucca.svg\" />\r\n                }\r\n              >\r\n                Lucca\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} sx={{ textAlign: 'center' }}>\r\n            <Typography variant=\"caption\">\r\n              We are working on more integrations, contact us to know more\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n// import { useTheme } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  TextField,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\n\r\nimport useAdmin from '../../hooks/useAdmin';\r\nimport EmojiButton from '../dashboard-component/EmojiButton';\r\n\r\nfunction createData(id, emoji, title, description, isActive) {\r\n  return { id, emoji, title, description, isActive };\r\n}\r\n\r\nfunction customData(id, emoji, title, isActive) {\r\n  return { id, emoji, title, isActive };\r\n}\r\n\r\nlet basicList = [\r\n  createData(0, '🏡', 'From home', 'Remote (works with Cities feature)', true),\r\n  createData(1, '🚶‍♂️', 'On the go', 'On the go / Out of the office', false),\r\n  createData(2, '🏝', 'Not working', 'Holiday / Not working', true),\r\n  createData(3, '🤒', 'Sick', 'Sick days (merged with \"Not working\")', true)\r\n];\r\n\r\nlet customList = [customData(0, '🙂', 'Custom 1', true)];\r\n\r\nStatusesCard.propTypes = {\r\n  dataProps: PropTypes.object,\r\n  setStatusProps: PropTypes.func\r\n};\r\n\r\nexport default function StatusesCard({ dataProps, setStatusProps }) {\r\n  const [basics, setBasics] = useState([]);\r\n  const [customs, setCustoms] = useState([]);\r\n\r\n  const { addStatus } = useAdmin();\r\n  useEffect(() => {\r\n    const sData = dataProps;\r\n    const basic = sData.basicList !== undefined ? sData.basicList : [];\r\n    const custom = sData.customList !== undefined ? sData.customList : [];\r\n    setBasics(basic);\r\n    setCustoms(custom);\r\n  }, [dataProps]);\r\n\r\n  useEffect(() => {\r\n    const tempStatuses = {};\r\n    tempStatuses.basicList = basics;\r\n    tempStatuses.customList = customs;\r\n    setStatusProps(tempStatuses);\r\n  }, [basics, customs]);\r\n\r\n  const changeIcon = (icon, index) => {\r\n    basicList = [];\r\n    const values = icon;\r\n    console.log(basics, index);\r\n    const insData = {\r\n      ...basics[index],\r\n      emoji: values\r\n    };\r\n    basics.map((item, iconIndex) => {\r\n      if (iconIndex === index) {\r\n        basicList.push(insData);\r\n      } else {\r\n        basicList.push(item);\r\n      }\r\n    });\r\n    setBasics([...basicList]);\r\n  };\r\n\r\n  const changeIconCustom = (icon, index) => {\r\n    customList = [];\r\n    const values = icon;\r\n    const insData = {\r\n      ...customs[index],\r\n      emoji: values\r\n    };\r\n    customs.map((item, iconIndex) => {\r\n      if (iconIndex === index) {\r\n        customList.push(insData);\r\n      } else {\r\n        customList.push(item);\r\n      }\r\n    });\r\n    setCustoms([...customList]);\r\n  };\r\n\r\n  const handleAddStatus = async () => {\r\n    const id = await addStatus();\r\n    customList.push(customData(id, '🙂', `Custom ${customList.length + 1}`, 0));\r\n    setCustoms([...customList]);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader subheader=\"STATUSES\" />\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\">Basic</Typography>\r\n          </Grid>\r\n          {basics.map((item, index) => (\r\n            <Grid item xs={12} key={item.id}>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <EmojiButton\r\n                  icon={item.emoji}\r\n                  index={index}\r\n                  changeIconProps={changeIcon}\r\n                />\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  label=\"Title\"\r\n                  variant=\"outlined\"\r\n                  sx={{ mr: 1, width: '100%' }}\r\n                  value={item.title}\r\n                  onChange={(e) => {\r\n                    const tmpBasics = [];\r\n                    const values = e.target.value;\r\n                    const insData = {\r\n                      ...basics[index],\r\n                      title: values\r\n                    };\r\n                    basics.map((item, bIndex) => {\r\n                      if (index === bIndex) {\r\n                        tmpBasics.push(insData);\r\n                      } else {\r\n                        tmpBasics.push(item);\r\n                      }\r\n                    });\r\n                    setBasics([...tmpBasics]);\r\n                  }}\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"checkedC\"\r\n                      checked={item.isActive === 1}\r\n                      onChange={() => {\r\n                        const tmpBasics = [];\r\n                        const Checked = !basics[index].isActive ? 1 : 0;\r\n                        const insData = {\r\n                          ...basics[index],\r\n                          isActive: Checked\r\n                        };\r\n                        basics.map((item, bIndex) => {\r\n                          if (index === bIndex) {\r\n                            tmpBasics.push(insData);\r\n                          } else {\r\n                            tmpBasics.push(item);\r\n                          }\r\n                        });\r\n                        setBasics([...tmpBasics]);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Active\"\r\n                />\r\n              </Box>\r\n              <Box sx={{ width: '100%', textAlign: 'center' }}>\r\n                <Typography variant=\"caption\">{item.description}</Typography>\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n          <Box m={2} />\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\">Custom</Typography>\r\n          </Grid>\r\n          {customs.map((item, index) => (\r\n            <Grid item xs={12} key={index}>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <EmojiButton\r\n                  icon={item.emoji}\r\n                  index={index}\r\n                  changeIconProps={changeIconCustom}\r\n                />\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  label=\"Title\"\r\n                  variant=\"outlined\"\r\n                  value={item.title}\r\n                  sx={{ mr: 1, width: '100%' }}\r\n                  onChange={(e) => {\r\n                    // const tmpCustoms = customs;\r\n                    // tmpCustoms[index].title = e.target.value;\r\n                    // setCustoms([...tmpCustoms]);\r\n\r\n                    const tmpCustoms = [];\r\n                    const values = e.target.value;\r\n                    const insData = {\r\n                      ...customs[index],\r\n                      title: values\r\n                    };\r\n                    customs.map((item, bIndex) => {\r\n                      if (index === bIndex) {\r\n                        tmpCustoms.push(insData);\r\n                      } else {\r\n                        tmpCustoms.push(item);\r\n                      }\r\n                    });\r\n                    setCustoms([...tmpCustoms]);\r\n                  }}\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"checkedC\"\r\n                      checked={item.isActive === 1}\r\n                      onChange={() => {\r\n                        const tmpCustoms = [];\r\n                        const Checked = !customs[index].isActive ? 1 : 0;\r\n                        const insData = {\r\n                          ...customs[index],\r\n                          isActive: Checked\r\n                        };\r\n                        customs.map((item, bIndex) => {\r\n                          if (index === bIndex) {\r\n                            tmpCustoms.push(insData);\r\n                          } else {\r\n                            tmpCustoms.push(item);\r\n                          }\r\n                        });\r\n                        setCustoms([...tmpCustoms]);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Active\"\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Button\r\n          onClick={handleAddStatus}\r\n          variant=\"contained\"\r\n          sx={{ width: '100%', mt: 2 }}\r\n        >\r\n          <AddIcon />\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n  useTheme,\r\n  experimentalStyled as styled\r\n} from '@material-ui/core/styles';\r\nimport { LoadingButton } from '@material-ui/lab';\r\nimport { Button, Paper, Container } from '@material-ui/core';\r\n\r\nimport useAdmin from '../../hooks/useAdmin';\r\n\r\nconst FootBarForSave = styled('div')(({ theme }) => ({\r\n  position: 'fixed',\r\n  left: 0,\r\n  bottom: 0,\r\n  height: 100,\r\n  width: '100%',\r\n  [theme.breakpoints.up('md')]: {\r\n    width: 'calc(100% - 279px)',\r\n    marginLeft: 279\r\n  }\r\n}));\r\n\r\nSaveChange.propTypes = {\r\n  setCancelProps: PropTypes.func,\r\n  saveDataProps: PropTypes.object\r\n};\r\n\r\nexport default function SaveChange({ setCancelProps, saveDataProps }) {\r\n  const theme = useTheme();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [saveData, setSaveData] = useState(saveDataProps);\r\n  const { updateOrganizations } = useAdmin();\r\n\r\n  useEffect(() => {\r\n    setSaveData(saveDataProps);\r\n  }, [saveDataProps]);\r\n  const handleChangedSaveAll = async () => {\r\n    setIsSubmitting(true);\r\n    const updatedOrg = saveData;\r\n    console.log(updatedOrg);\r\n    await updateOrganizations({ updatedOrg });\r\n    enqueueSnackbar('Update success', { variant: 'success' });\r\n    setIsSubmitting(false);\r\n    setCancelProps(true);\r\n  };\r\n\r\n  const handleSaveCancel = () => {\r\n    setCancelProps(true);\r\n  };\r\n\r\n  return (\r\n    <FootBarForSave>\r\n      <Container maxWidth=\"md\">\r\n        <Paper\r\n          sx={{\r\n            textAlign: 'center',\r\n            padding: theme.spacing(3, 1),\r\n            borderRadius: '100px',\r\n            boxShadow:\r\n              '0 0 2px 0 rgb(145 158 171 / 24%), 0 16px 32px -4px rgb(145 158 171 / 24%)'\r\n          }}\r\n        >\r\n          <LoadingButton\r\n            variant=\"contained\"\r\n            pending={isSubmitting}\r\n            onClick={handleChangedSaveAll}\r\n          >\r\n            Save Changes\r\n          </LoadingButton>\r\n          <Button\r\n            variant=\"outlined\"\r\n            sx={{ marginLeft: 5 }}\r\n            onClick={handleSaveCancel}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Paper>\r\n      </Container>\r\n    </FootBarForSave>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n// material\r\nimport { Grid, Box } from '@material-ui/core';\r\n// ----------------------------------------------------------------------\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getOrganizations } from '../../redux/slices/adminSetting';\r\n\r\nimport AlertTrialCard from './AlertTrialCard';\r\nimport CompanyCard from './CompanyCard';\r\nimport CalendarCard from './CalendarCard';\r\nimport FeaturesCard from './FeaturesCard';\r\nimport IntegrationCard from './IntegrationCard';\r\nimport StatusesCard from './StatusesCard';\r\nimport SaveChanges from './SaveChanges';\r\n\r\nexport default function OrganizationContent() {\r\n  const dispatch = useDispatch();\r\n  const { organizations } = useSelector((state) => state.adminSetting);\r\n\r\n  const [organization, setOrganization] = useState({});\r\n  const [company, setCompany] = useState({});\r\n  const [calendar, setCalendar] = useState({});\r\n  const [features, setFeatures] = useState({});\r\n  const [statuses, setStatuses] = useState({});\r\n  const [isSave, setIsSave] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrganizations());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const { result } = organizations;\r\n    console.log(result);\r\n    if (result !== undefined) {\r\n      setCompany(result.company);\r\n      setCalendar(result.calendar);\r\n      setFeatures(result.features);\r\n      setStatuses(result.statuses);\r\n      setOrganization(result);\r\n    }\r\n  }, [organizations]);\r\n\r\n  useEffect(() => {\r\n    setIsSave(true);\r\n  }, [organization]);\r\n\r\n  const handleCompanySetting = (companySetting) => {\r\n    setOrganization({\r\n      ...organization,\r\n      company: companySetting\r\n    });\r\n  };\r\n\r\n  const handleCalendarSetting = (calendarSetting) => {\r\n    setOrganization({\r\n      ...organization,\r\n      calendar: calendarSetting\r\n    });\r\n  };\r\n\r\n  const handleFeatureSetting = (featuresSetting) => {\r\n    setOrganization({\r\n      ...organization,\r\n      features: featuresSetting\r\n    });\r\n  };\r\n\r\n  const handleStatusSetting = (statusSetting) => {\r\n    setOrganization({\r\n      ...organization,\r\n      statuses: statusSetting\r\n    });\r\n  };\r\n\r\n  const handleViewSaveChanges = (isCancel) => {\r\n    setIsSave(!isCancel);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <AlertTrialCard />\r\n      </Grid>\r\n      <Grid item md={6} xs={12}>\r\n        <CompanyCard\r\n          dataProps={company}\r\n          setCompanyProps={handleCompanySetting}\r\n        />\r\n        <Box m={3} />\r\n        <IntegrationCard />\r\n      </Grid>\r\n      <Grid item md={6} xs={12}>\r\n        <CalendarCard\r\n          dataProps={calendar}\r\n          setCalendarProps={handleCalendarSetting}\r\n        />\r\n        <Box m={3} />\r\n        <FeaturesCard\r\n          dataProps={features}\r\n          setFeatureProps={handleFeatureSetting}\r\n        />\r\n        <Box m={3} />\r\n        <StatusesCard\r\n          dataProps={statuses}\r\n          setStatusProps={handleStatusSetting}\r\n        />\r\n      </Grid>\r\n      {isSave && (\r\n        <SaveChanges\r\n          setCancelProps={handleViewSaveChanges}\r\n          saveDataProps={organization}\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","// components\nimport { Container } from '@material-ui/core';\n\nimport Page from '../components/Page';\n\nimport { OrganizationContent } from '../components/dashboard-organization';\nimport HeaderDashboard from '../components/HeaderDashboard';\nimport { PATH_DASHBOARD } from '../routes/paths';\n// ----------------------------------------------------------------------\n\nexport default function OrganizationPage() {\n  return (\n    <Page title=\"Thimble | Organization\">\n      <Container maxWidth=\"xl\">\n        <HeaderDashboard\n          heading=\"Organization\"\n          links={[\n            { name: 'Admin', href: PATH_DASHBOARD.general.home },\n            { name: 'Organization' }\n          ]}\n        />\n        <OrganizationContent />\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}